Search.setIndex({"docnames": ["index", "modules", "package_aab", "package_aab.src", "package_aab.tests"], "filenames": ["index.rst", "modules.rst", "package_aab.rst", "package_aab.src.rst", "package_aab.tests.rst"], "titles": ["Welcome to aab\u2019s documentation!", "AABB", "package_aab package", "package_aab.src package", "package_aab.tests package"], "terms": {"aabb": 0, "package_aab": [0, 1], "src": [0, 1, 2], "packag": [0, 1], "index": [0, 3], "modul": [0, 1], "search": [0, 3], "page": 0, "submodul": [1, 2], "automata": [1, 2], "bwt": [1, 2], "boyermoor": [1, 2], "eamotif": [1, 2], "evolalgorithm": [1, 2], "indiv": [1, 2], "metabolicnetwork": [1, 2], "motiffind": [1, 2], "mygraph": [1, 2], "mygraph1": [1, 2], "mymotif": [1, 2], "myseq": [1, 2], "popul": [1, 2], "suffixtre": [1, 2], "trie": [1, 2], "debrujin": [1, 2], "content": 1, "test": [2, 3], "test_btw": 2, "test_boyermoor": 2, "test_metabolicnetwork": 2, "test_motif_find": 2, "test_mygraph": 2, "test_mymotif": 2, "test_myseq": 2, "test_sufixtre": 2, "test_tri": 2, "test_automata": 2, "class": [3, 4], "alphabet": 3, "str": 3, "pattern": 3, "sourc": [3, 4], "base": [3, 4], "object": 3, "implement": 3, "nucleotid": 3, "sequenc": 3, "thi": 3, "method": [3, 4], "process": 3, "linear": 3, "wai": 3, "read": 3, "from": 3, "left": 3, "right": 3, "The": 3, "start": 3, "first": 3, "state": 3, "machin": 3, "charact": 3, "text": 3, "each": 3, "step": 3, "next": 3, "consid": 3, "move": 3, "new": 3, "number": 3, "equal": 3, "length": 3, "plu": 3, "one": 3, "found": 3, "when": 3, "being": 3, "enter": 3, "applynextst": 3, "seq": 3, "list": 3, "return": 3, "all": 3, "param": 3, "buildtransitiont": 3, "construct": 3, "transit": 3, "tabl": 3, "current": 3, "previou": 3, "nextstat": 3, "int": 3, "char": 3, "patternseqposit": 3, "posit": 3, "where": 3, "an": 3, "occurr": 3, "printautomata": 3, "print": 3, "result": 3, "us": 3, "overlap": 3, "seq1": 3, "seq2": 3, "two": 3, "check": 3, "match": 3, "string": 3, "second": 3, "last": 3, "smallest": 3, "buildsufarrai": 3, "fals": 3, "sa": 3, "none": [3, 4], "burrow": 3, "hweeler": 3, "algorithm": 3, "compress": 3, "larg": 3, "thu": 3, "reduc": 3, "space": 3, "moreov": 3, "possibl": 3, "find": 3, "format": 3, "effici": 3, "build_bwt": 3, "gener": 3, "rotat": 3, "sort": 3, "them": 3, "bw_match": 3, "bw_matching_po": 3, "patt": 3, "check_seq": 3, "introduc": 3, "static": 3, "findithocc": 3, "le": 3, "elem": 3, "allow": 3, "discov": 3, "i": 3, "\u00e9sima": 3, "occur": 3, "symbol": 3, "1": 3, "case": 3, "doesn": 3, "t": 3, "get_first_col": 3, "recov": 3, "column": 3, "correspond": 3, "matrix": 3, "m": 3, "inverse_bwt": 3, "origin": 3, "its": 3, "last_to_first": 3, "creat": 3, "map": 3, "indic": 3, "set_bwt": 3, "bw": 3, "set": [3, 4], "directli": 3, "btw": 3, "instanc": 3, "It": 3, "scenario": 3, "we": 3, "have": 3, "precomput": 3, "want": 3, "assign": 3, "attribut": 3, "without": 3, "recomput": 3, "process_bcr": 3, "bad": 3, "rule": 3, "skip": 3, "over": 3, "do": 3, "inform": 3, "determin": 3, "shift": 3, "rel": 3, "mismatch": 3, "dictionari": 3, "occ": 3, "kei": 3, "valu": 3, "defin": 3, "rightmost": 3, "which": 3, "appear": 3, "mean": 3, "doe": 3, "you": 3, "quickli": 3, "calcul": 3, "follow": 3, "accord": 3, "note": 3, "can": 3, "neg": 3, "ignor": 3, "iter": 3, "process_gsr": 3, "good": 3, "suffix": 3, "f": 3, "longest": 3, "proper": 3, "s": 3, "prefix": 3, "search_pattern": 3, "given": 3, "contain": 3, "look": 3, "our": 3, "size": 3, "gene": 3, "lb": 3, "0": 3, "ub": 3, "repres": 3, "individu": 3, "genet": 3, "initi": 3, "mutat": 3, "crossov": 3, "fit": 3, "evalu": 3, "indiv2": 3, "tupl": 3, "getfit": 3, "union": 3, "float": 3, "getgen": 3, "initrandom": 3, "one_pt_crossov": 3, "setfit": 3, "indivint": 3, "random": 3, "between": 3, "upper": 3, "lower": 3, "bound": 3, "indivr": 3, "interv": 3, "real": 3, "represent": 3, "alter": 3, "singl": 3, "perform": 3, "oper": 3, "randomli": 3, "select": 3, "8": 3, "recurr": 3, "biolog": 3, "dna": 3, "protein": 3, "exact": 3, "degener": 3, "consensu": 3, "ar": 3, "ambigu": 3, "branchandbound": 3, "option": 3, "solut": 3, "best": 3, "motif": 3, "vector": 3, "bypass": 3, "condit": 3, "explain": 3, "abov": 3, "zero": 3, "non": 3, "createmotiffromindex": 3, "probabilist": 3, "type": 3, "sub": 3, "exhaustivesearch": 3, "score": 3, "deriv": 3, "profil": 3, "gibb": 3, "num_iter": 3, "sampl": 3, "choos": 3, "segment": 3, "increas": 3, "converg": 3, "correct": 3, "remov": 3, "consider": 3, "remain": 3, "continu": 3, "fix": 3, "after": 3, "so": 3, "far": 3, "heuristicconsensu": 3, "comput": 3, "heurist": 3, "onli": 3, "s1": 3, "s2": 3, "give": 3, "better": 3, "For": 3, "order": 3, "maxim": 3, "heuristicstochast": 3, "stochast": 3, "most": 3, "like": 3, "adjust": 3, "achiev": 3, "nextsol": 3, "auxiliari": 3, "nextvertex": 3, "vertex": 3, "vertic": 3, "readfil": 3, "file": 3, "roulett": 3, "simul": 3, "exampl": 3, "wheel": 3, "probabl": 3, "certain": 3, "proport": 3, "your": 3, "chosen": 3, "function": 3, "maximum": 3, "scoremult": 3, "multipl": 3, "provid": 3, "quantifi": 3, "import": 3, "multipli": 3, "togeth": 3, "get": 3, "overal": 3, "seqsiz": 3, "x": 3, "test1_1": 3, "test1_2": 3, "test1_3": 3, "test1_4": 3, "test1_5": 3, "test2": 3, "g": 3, "dict": 3, "graph": 3, "parent": 3, "differ": 3, "ones": 3, "overlapgraph": 3, "debruijngraph": 3, "essenti": 3, "build": 3, "add_edg": 3, "o": 3, "d": 3, "add": 3, "edg": 3, "exist": 3, "thei": 3, "ad": 3, "arco": 3, "add_vertex": 3, "v": 3, "true": 3, "element": 3, "all_clustering_coef": 3, "coeffici": 3, "node": 3, "all_degre": 3, "deg_typ": 3, "inout": 3, "degre": 3, "out": 3, "paramet": 3, "tipo": 3, "de": 3, "grau": 3, "entrada": 3, "sa\u00edda": 3, "ou": 3, "ambo": 3, "betweenness_centr": 3, "check_balanced_graph": 3, "bool": 3, "balanc": 3, "unbalanc": 3, "respect": 3, "check_balanced_nod": 3, "input": 3, "output": 3, "check_if_hamiltonian_path": 3, "p": 3, "path": 3, "hamiltonian": 3, "invalid": 3, "valid": 3, "check_if_valid_path": 3, "check_nearly_balanced_graph": 3, "semi": 3, "closeness_centr": 3, "averag": 3, "approach": 3, "distanc": 3, "travel": 3, "affect": 3, "clustering_coef": 3, "cluster": 3, "measur": 3, "extent": 3, "embed": 3, "cohes": 3, "group": 3, "obtain": 3, "adjacent": 3, "adjac": 3, "begin": 3, "end": 3, "eulerian_cycl": 3, "eulerian": 3, "cycl": 3, "pass": 3, "through": 3, "arc": 3, "examin": 3, "onc": 3, "re": 3, "eulerian_path": 3, "get_adjac": 3, "get_edg": 3, "destin": 3, "get_nod": 3, "get_predecessor": 3, "predecessor": 3, "get_successor": 3, "successor": 3, "has_cycl": 3, "ha": 3, "loop": 3, "close": 3, "highest_clos": 3, "top": 3, "10": 3, "highest_degre": 3, "all_deg": 3, "higher": 3, "grade": 3, "both": 3, "highest": 3, "in_degre": 3, "possess": 3, "nodo": 3, "entri": 3, "is_connect": 3, "whether": 3, "connect": 3, "mean_clustering_coef": 3, "global": 3, "mean_clustering_perdegre": 3, "mean_degre": 3, "mean_dist": 3, "cverag": 3, "dethod": 3, "reachabl": 3, "node_has_cycl": 3, "same": 3, "out_degre": 3, "ramif": 3, "exit": 3, "print_graph": 3, "prob_degre": 3, "reachable_bf": 3, "visit": 3, "until": 3, "reachable_df": 3, "depth": 3, "explor": 3, "further": 3, "more": 3, "altern": 3, "reachable_with_dist": 3, "need": 3, "search_hamiltonian_path": 3, "pathfind": 3, "otherwis": 3, "search_hamiltonian_path_from_nod": 3, "shortest_path": 3, "shortest": 3, "is_in_tuple_list": 3, "tl": 3, "val": 3, "either": 3, "forerunn": 3, "verifi": 3, "e": 3, "test1": 3, "test3": 3, "test4": 3, "test5": 3, "lseq": 3, "pwm": 3, "present": 3, "manipul": 3, "recur": 3, "biologi": 3, "also": 3, "store": 3, "conserv": 3, "count": 3, "createpwm": 3, "j": 3, "docount": 3, "matric": 3, "maskedconsensu": 3, "incid": 3, "than": 3, "50": 3, "mostprobableseq": 3, "proballposit": 3, "longer": 3, "ie": 3, "3": 3, "atcgtacg": 3, "would": 3, "atc": 3, "tcg": 3, "cgt": 3, "gta": 3, "tac": 3, "acg": 3, "subsequ": 3, "probabseq": 3, "intoduc": 3, "creatematzero": 3, "line_num": 3, "col_num": 3, "analyz": 3, "line": 3, "printmat": 3, "mat": 3, "seq_typ": 3, "rna": 3, "allprotein": 3, "proteic": 3, "execut": 3, "amino": 3, "codontransl": 3, "cod": 3, "translat": 3, "codon": 3, "acid": 3, "largestorfprotein": 3, "bigger": 3, "longestproteinseq": 3, "orf": 3, "open": 3, "frame": 3, "stop": 3, "six": 3, "revers": 3, "complement": 3, "printseq": 3, "complet": 3, "reversecompl": 3, "invert": 3, "rnacodon": 3, "seqtransl": 3, "initial_po": 3, "transcript": 3, "replac": 3, "thymin": 3, "uracil": 3, "u": 3, "valida": 3, "validateseqr": 3, "regular": 3, "express": 3, "tree": 3, "pre": 3, "target": 3, "make": 3, "veri": 3, "common": 3, "substr": 3, "add_nod": 3, "leaf_num": 3, "refer": 3, "leaf": 3, "default": 3, "intern": 3, "add_suffix": 3, "suf_num": 3, "leav": 3, "find_pattern": 3, "root": 3, "reach": 3, "fail": 3, "sheet": 3, "below": 3, "get_leafes_below": 3, "collect": 3, "print_tre": 3, "structur": 3, "suffix_tree_from_seq": 3, "call": 3, "anoth": 3, "respons": 3, "associ": 3, "built": 3, "necessari": 3, "insert": 3, "insert_sequ": 3, "ani": 3, "booleano": 3, "print_tri": 3, "frag": 3, "bruijn": 3, "These": 3, "fragment": 3, "k": 3, "mer": 3, "subclass": 3, "inherit": 3, "alreadi": 3, "create_debruijn_graph": 3, "creation": 3, "debruijn": 3, "seq_from_path": 3, "composit": 3, "except": 3, "test_bwt": 4, "methodnam": 4, "runtest": 4, "testcas": 4, "setup": 4, "hook": 4, "up": 4, "fixtur": 4, "befor": 4, "exercis": 4, "test_bwtmethod": 4, "test_lasttofirst": 4, "test_runtest": 4, "testboyermoor": 4, "test_search_pattern": 4, "testmotiffind": 4, "test_branch_and_bound": 4, "test_consensu": 4, "test_exhaustive_search": 4, "test_heuristicconsensu": 4, "test_scor": 4, "test_score_mult": 4, "test_all__degre": 4, "test_all_clustering_coef": 4, "test_degre": 4, "test_dist": 4, "test_get__adjac": 4, "test_get__edg": 4, "test_get__nod": 4, "test_get__predecessor": 4, "test_get__successor": 4, "test_has_cycl": 4, "test_in__degre": 4, "test_mean_clustering_coef": 4, "test_mean_clustering_perdegre": 4, "test_mean_degre": 4, "test_mean_dist": 4, "test_node_has_cycl": 4, "test_out__degre": 4, "test_prob_degre": 4, "test_reachable_reachable__bf": 4, "test_reachable_reachable__df": 4, "test_reachable_with_dist": 4, "test_shortest__path": 4, "test_maskedconsensu": 4, "test_mat_count": 4, "test_mostprobableseq": 4, "test_proballposit": 4, "test_probabseq": 4, "test_pwm": 4, "test_allprotein": 4, "test_longestproteinseq": 4, "test_orf": 4, "test_reversecompl": 4, "test_rnacodon": 4, "test_seqtransl": 4, "test_transcricao": 4, "test_suffixtre": 4, "test_suffixtreemethod": 4, "test_doesntfindpattern": 4, "test_findpattern": 4, "testtri": 4, "test_insert": 4, "test_insert_multiple_sequ": 4, "test_insert_single_sequ": 4, "test_match": 4, "testautomata": 4, "test_applynextst": 4, "test_buildtransitiont": 4, "test_patternseqposit": 4}, "objects": {"": [[2, 0, 0, "-", "package_aab"]], "package_aab": [[3, 0, 0, "-", "src"], [4, 0, 0, "-", "tests"]], "package_aab.src": [[3, 0, 0, "-", "Automata"], [3, 0, 0, "-", "BWT"], [3, 0, 0, "-", "BoyerMoore"], [3, 0, 0, "-", "Indiv"], [3, 0, 0, "-", "MotifFinding"], [3, 0, 0, "-", "MyGraph"], [3, 0, 0, "-", "MyGraph1"], [3, 0, 0, "-", "MyMotifs"], [3, 0, 0, "-", "MySeq"], [3, 0, 0, "-", "SuffixTree"], [3, 0, 0, "-", "Trie"], [3, 0, 0, "-", "debrujin"]], "package_aab.src.Automata": [[3, 1, 1, "", "Automata"], [3, 3, 1, "", "overlap"]], "package_aab.src.Automata.Automata": [[3, 2, 1, "", "applyNextState"], [3, 2, 1, "", "buildTransitionTable"], [3, 2, 1, "", "nextState"], [3, 2, 1, "", "patternSeqPosition"], [3, 2, 1, "", "printAutomata"]], "package_aab.src.BWT": [[3, 1, 1, "", "BWT"]], "package_aab.src.BWT.BWT": [[3, 2, 1, "", "build_bwt"], [3, 2, 1, "", "bw_matching"], [3, 2, 1, "", "bw_matching_pos"], [3, 2, 1, "", "check_seqs"], [3, 2, 1, "", "findithocc"], [3, 2, 1, "", "get_first_col"], [3, 2, 1, "", "inverse_bwt"], [3, 2, 1, "", "last_to_first"], [3, 2, 1, "", "set_bwt"]], "package_aab.src.BoyerMoore": [[3, 1, 1, "", "BoyerMoore"]], "package_aab.src.BoyerMoore.BoyerMoore": [[3, 2, 1, "", "process_bcr"], [3, 2, 1, "", "process_gsr"], [3, 2, 1, "", "search_pattern"]], "package_aab.src.Indiv": [[3, 1, 1, "", "Indiv"], [3, 1, 1, "", "IndivInt"], [3, 1, 1, "", "IndivReal"]], "package_aab.src.Indiv.Indiv": [[3, 2, 1, "", "crossover"], [3, 2, 1, "", "getFitness"], [3, 2, 1, "", "getGenes"], [3, 2, 1, "", "initRandom"], [3, 2, 1, "", "mutation"], [3, 2, 1, "", "one_pt_crossover"], [3, 2, 1, "", "setFitness"]], "package_aab.src.Indiv.IndivInt": [[3, 2, 1, "", "initRandom"], [3, 2, 1, "", "mutation"]], "package_aab.src.Indiv.IndivReal": [[3, 2, 1, "", "initRandom"], [3, 2, 1, "", "mutation"]], "package_aab.src.MotifFinding": [[3, 1, 1, "", "MotifFinding"], [3, 3, 1, "", "random"], [3, 3, 1, "", "test1_1"], [3, 3, 1, "", "test1_2"], [3, 3, 1, "", "test1_3"], [3, 3, 1, "", "test1_4"], [3, 3, 1, "", "test1_5"], [3, 3, 1, "", "test2"]], "package_aab.src.MotifFinding.MotifFinding": [[3, 2, 1, "", "branchAndBound"], [3, 2, 1, "", "bypass"], [3, 2, 1, "", "createMotifFromIndexes"], [3, 2, 1, "", "exhaustiveSearch"], [3, 2, 1, "", "gibbs"], [3, 2, 1, "", "heuristicConsensus"], [3, 2, 1, "", "heuristicStochastic"], [3, 2, 1, "", "nextSol"], [3, 2, 1, "", "nextVertex"], [3, 2, 1, "", "readFile"], [3, 2, 1, "", "roulette"], [3, 2, 1, "", "score"], [3, 2, 1, "", "scoreMult"], [3, 2, 1, "", "seqSize"]], "package_aab.src.MyGraph": [[3, 1, 1, "", "MyGraph"], [3, 3, 1, "", "is_in_tuple_list"]], "package_aab.src.MyGraph.MyGraph": [[3, 2, 1, "", "add_edge"], [3, 2, 1, "", "add_vertex"], [3, 2, 1, "", "all_clustering_coefs"], [3, 2, 1, "", "all_degrees"], [3, 2, 1, "", "betweenness_centrality"], [3, 2, 1, "", "check_balanced_graph"], [3, 2, 1, "", "check_balanced_node"], [3, 2, 1, "", "check_if_hamiltonian_path"], [3, 2, 1, "", "check_if_valid_path"], [3, 2, 1, "", "check_nearly_balanced_graph"], [3, 2, 1, "", "closeness_centrality"], [3, 2, 1, "", "clustering_coef"], [3, 2, 1, "", "degree"], [3, 2, 1, "", "distance"], [3, 2, 1, "", "eulerian_cycle"], [3, 2, 1, "", "eulerian_path"], [3, 2, 1, "", "get_adjacents"], [3, 2, 1, "", "get_edges"], [3, 2, 1, "", "get_nodes"], [3, 2, 1, "", "get_predecessors"], [3, 2, 1, "", "get_successors"], [3, 2, 1, "", "has_cycle"], [3, 2, 1, "", "highest_closeness"], [3, 2, 1, "", "highest_degrees"], [3, 2, 1, "", "in_degree"], [3, 2, 1, "", "is_connected"], [3, 2, 1, "", "mean_clustering_coef"], [3, 2, 1, "", "mean_clustering_perdegree"], [3, 2, 1, "", "mean_degree"], [3, 2, 1, "", "mean_distances"], [3, 2, 1, "", "node_has_cycle"], [3, 2, 1, "", "out_degree"], [3, 2, 1, "", "print_graph"], [3, 2, 1, "", "prob_degree"], [3, 2, 1, "", "reachable_bfs"], [3, 2, 1, "", "reachable_dfs"], [3, 2, 1, "", "reachable_with_dist"], [3, 2, 1, "", "search_hamiltonian_path"], [3, 2, 1, "", "search_hamiltonian_path_from_node"], [3, 2, 1, "", "shortest_path"], [3, 2, 1, "", "size"]], "package_aab.src.MyGraph1": [[3, 1, 1, "", "MyGraph"], [3, 3, 1, "", "is_in_tuple_list"], [3, 3, 1, "", "test1"], [3, 3, 1, "", "test2"], [3, 3, 1, "", "test3"], [3, 3, 1, "", "test4"], [3, 3, 1, "", "test5"]], "package_aab.src.MyGraph1.MyGraph": [[3, 2, 1, "", "add_edge"], [3, 2, 1, "", "add_vertex"], [3, 2, 1, "", "degree"], [3, 2, 1, "", "distance"], [3, 2, 1, "", "get_adjacents"], [3, 2, 1, "", "get_edges"], [3, 2, 1, "", "get_nodes"], [3, 2, 1, "", "get_predecessors"], [3, 2, 1, "", "get_successors"], [3, 2, 1, "", "has_cycle"], [3, 2, 1, "", "in_degree"], [3, 2, 1, "", "node_has_cycle"], [3, 2, 1, "", "out_degree"], [3, 2, 1, "", "print_graph"], [3, 2, 1, "", "reachable_bfs"], [3, 2, 1, "", "reachable_dfs"], [3, 2, 1, "", "reachable_with_dist"], [3, 2, 1, "", "shortest_path"], [3, 2, 1, "", "size"]], "package_aab.src.MyMotifs": [[3, 1, 1, "", "MyMotifs"], [3, 3, 1, "", "createMatZeros"], [3, 3, 1, "", "printMat"]], "package_aab.src.MyMotifs.MyMotifs": [[3, 2, 1, "", "consensus"], [3, 2, 1, "", "createPWM"], [3, 2, 1, "", "doCounts"], [3, 2, 1, "", "maskedConsensus"], [3, 2, 1, "", "mostProbableSeq"], [3, 2, 1, "", "probAllPositions"], [3, 2, 1, "", "probabSeq"]], "package_aab.src.MySeq": [[3, 1, 1, "", "MySeq"]], "package_aab.src.MySeq.MySeq": [[3, 2, 1, "", "allProtein"], [3, 2, 1, "", "alphabet"], [3, 2, 1, "", "codonTranslate"], [3, 2, 1, "", "largestOrfProtein"], [3, 2, 1, "", "longestProteinSeq"], [3, 2, 1, "", "orfs"], [3, 2, 1, "", "printSeq"], [3, 2, 1, "", "reverseComplement"], [3, 2, 1, "", "rnaCodon"], [3, 2, 1, "", "seqTranslation"], [3, 2, 1, "", "transcription"], [3, 2, 1, "", "valida"], [3, 2, 1, "", "validateSeqRE"]], "package_aab.src.SuffixTree": [[3, 1, 1, "", "SuffixTree"], [3, 3, 1, "", "test"]], "package_aab.src.SuffixTree.SuffixTree": [[3, 2, 1, "", "add_node"], [3, 2, 1, "", "add_suffix"], [3, 2, 1, "", "check_seqs"], [3, 2, 1, "", "find_pattern"], [3, 2, 1, "", "get_leafes_below"], [3, 2, 1, "", "print_tree"], [3, 2, 1, "", "suffix_tree_from_seq"]], "package_aab.src.Trie": [[3, 1, 1, "", "Trie"]], "package_aab.src.Trie.Trie": [[3, 2, 1, "", "check_seqs"], [3, 2, 1, "", "insert"], [3, 2, 1, "", "insert_sequence"], [3, 2, 1, "", "matches"], [3, 2, 1, "", "print_trie"]], "package_aab.src.debrujin": [[3, 1, 1, "", "DeBruijnGraph"], [3, 3, 1, "", "composition"], [3, 3, 1, "", "prefix"], [3, 3, 1, "", "suffix"]], "package_aab.src.debrujin.DeBruijnGraph": [[3, 2, 1, "", "add_edge"], [3, 2, 1, "", "create_deBruijn_graph"], [3, 2, 1, "", "in_degree"], [3, 2, 1, "", "seq_from_path"]], "package_aab.tests": [[4, 0, 0, "-", "test_BTW"], [4, 0, 0, "-", "test_BoyerMoore"], [4, 0, 0, "-", "test_Motif_Finding"], [4, 0, 0, "-", "test_MyGraph"], [4, 0, 0, "-", "test_MyMotifs"], [4, 0, 0, "-", "test_MySeq"], [4, 0, 0, "-", "test_SufixTree"], [4, 0, 0, "-", "test_Trie"], [4, 0, 0, "-", "test_automata"]], "package_aab.tests.test_BTW": [[4, 1, 1, "", "test_BWT"], [4, 1, 1, "", "test_BWtMethods"]], "package_aab.tests.test_BTW.test_BWT": [[4, 2, 1, "", "setUp"]], "package_aab.tests.test_BTW.test_BWtMethods": [[4, 2, 1, "", "test_lastToFirst"], [4, 2, 1, "", "test_runTest"]], "package_aab.tests.test_BoyerMoore": [[4, 1, 1, "", "TestBoyerMoore"]], "package_aab.tests.test_BoyerMoore.TestBoyerMoore": [[4, 2, 1, "", "setUp"], [4, 2, 1, "", "test_search_pattern"]], "package_aab.tests.test_Motif_Finding": [[4, 1, 1, "", "TestMotifFinding"]], "package_aab.tests.test_Motif_Finding.TestMotifFinding": [[4, 2, 1, "", "test_branch_and_bound"], [4, 2, 1, "", "test_consensus"], [4, 2, 1, "", "test_exhaustive_search"], [4, 2, 1, "", "test_heuristicConsensus"], [4, 2, 1, "", "test_score"], [4, 2, 1, "", "test_score_mult"]], "package_aab.tests.test_MyGraph": [[4, 1, 1, "", "test_MyGraph"]], "package_aab.tests.test_MyGraph.test_MyGraph": [[4, 2, 1, "", "setUp"], [4, 2, 1, "", "test_all__degrees"], [4, 2, 1, "", "test_all_clustering_coefs"], [4, 2, 1, "", "test_degree"], [4, 2, 1, "", "test_distance"], [4, 2, 1, "", "test_get__adjacents"], [4, 2, 1, "", "test_get__edges"], [4, 2, 1, "", "test_get__nodes"], [4, 2, 1, "", "test_get__predecessors"], [4, 2, 1, "", "test_get__successors"], [4, 2, 1, "", "test_has_cycle"], [4, 2, 1, "", "test_in__degree"], [4, 2, 1, "", "test_mean_clustering_coef"], [4, 2, 1, "", "test_mean_clustering_perdegree"], [4, 2, 1, "", "test_mean_degree"], [4, 2, 1, "", "test_mean_distances"], [4, 2, 1, "", "test_node_has_cycle"], [4, 2, 1, "", "test_out__degree"], [4, 2, 1, "", "test_prob_degree"], [4, 2, 1, "", "test_reachable_reachable__bfs"], [4, 2, 1, "", "test_reachable_reachable__dfs"], [4, 2, 1, "", "test_reachable_with_dist"], [4, 2, 1, "", "test_shortest__path"]], "package_aab.tests.test_MyMotifs": [[4, 1, 1, "", "test_MyMotifs"]], "package_aab.tests.test_MyMotifs.test_MyMotifs": [[4, 2, 1, "", "setUp"], [4, 2, 1, "", "test_consensus"], [4, 2, 1, "", "test_maskedConsensus"], [4, 2, 1, "", "test_mat_count"], [4, 2, 1, "", "test_mostProbableSeq"], [4, 2, 1, "", "test_probAllPosition"], [4, 2, 1, "", "test_probabSeq"], [4, 2, 1, "", "test_pwm"]], "package_aab.tests.test_MySeq": [[4, 1, 1, "", "test_MySeq"]], "package_aab.tests.test_MySeq.test_MySeq": [[4, 2, 1, "", "setUp"], [4, 2, 1, "", "test_allProtein"], [4, 2, 1, "", "test_longestProteinSeq"], [4, 2, 1, "", "test_orfs"], [4, 2, 1, "", "test_reverseComplement"], [4, 2, 1, "", "test_rnaCodon"], [4, 2, 1, "", "test_seqTranslation"], [4, 2, 1, "", "test_transcricao"]], "package_aab.tests.test_SufixTree": [[4, 1, 1, "", "test_SuffixTree"], [4, 1, 1, "", "test_SuffixTreeMethods"]], "package_aab.tests.test_SufixTree.test_SuffixTree": [[4, 2, 1, "", "setUp"]], "package_aab.tests.test_SufixTree.test_SuffixTreeMethods": [[4, 2, 1, "", "test_doesntFindPattern"], [4, 2, 1, "", "test_findPattern"]], "package_aab.tests.test_Trie": [[4, 1, 1, "", "TestTrie"]], "package_aab.tests.test_Trie.TestTrie": [[4, 2, 1, "", "test_insert"], [4, 2, 1, "", "test_insert_multiple_sequences"], [4, 2, 1, "", "test_insert_single_sequence"], [4, 2, 1, "", "test_matches"]], "package_aab.tests.test_automata": [[4, 1, 1, "", "TestAutomata"]], "package_aab.tests.test_automata.TestAutomata": [[4, 2, 1, "", "setUp"], [4, 2, 1, "", "test_applyNextState"], [4, 2, 1, "", "test_buildTransitionTable"], [4, 2, 1, "", "test_patternSeqPosition"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "aab": 0, "s": 0, "document": 0, "content": [0, 2, 3, 4], "indic": 0, "tabl": 0, "aabb": 1, "package_aab": [2, 3, 4], "packag": [2, 3, 4], "subpackag": 2, "modul": [2, 3, 4], "src": 3, "submodul": [3, 4], "automata": 3, "bwt": 3, "boyermoor": 3, "eamotif": 3, "evolalgorithm": 3, "indiv": 3, "metabolicnetwork": 3, "motiffind": 3, "mygraph": 3, "mygraph1": 3, "mymotif": 3, "myseq": 3, "popul": 3, "suffixtre": 3, "trie": 3, "debrujin": 3, "test": 4, "test_btw": 4, "test_boyermoor": 4, "test_metabolicnetwork": 4, "test_motif_find": 4, "test_mygraph": 4, "test_mymotif": 4, "test_myseq": 4, "test_sufixtre": 4, "test_tri": 4, "test_automata": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})