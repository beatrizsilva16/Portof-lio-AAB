From: <Saved by Blink>
Snapshot-Content-Location: file:///C:/Users/USUARIO/Desktop/package_aab.src%20package%20%E2%80%94%20AABB%20documentation.htm
Subject: =?utf-8?Q?package_aab.src=20package=20=E2=80=94=20AABB=20documentation?=
Date: Tue, 11 Apr 2023 22:45:17 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--XZw9mQtmtvfj0x3yyfPyS88edy4BYzOlNDpGi9eWkg----"


------MultipartBoundary--XZw9mQtmtvfj0x3yyfPyS88edy4BYzOlNDpGi9eWkg----
Content-Type: text/html
Content-ID: <frame-935C9A8D1AD5BED58377F48364A25C52@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/Users/USUARIO/Desktop/package_aab.src%20package%20%E2%80%94%20AABB%20documentation.htm

<!DOCTYPE html><!-- saved from url=3D(0075)http://localhost:63342/AABB/Docu=
mentation/_build/html/package_aab.src.html# --><html lang=3D"en"><head><met=
a http-equiv=3D"Content-Type" content=3D"text/html; charset=3DUTF-8">
   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0"><meta name=3D"generator" content=3D"Docutils 0.18.1: http://docutil=
s.sourceforge.net/">

    <title>package_aab.src package =E2=80=94 AABB  documentation</title>
    <link rel=3D"stylesheet" type=3D"text/css" href=3D"file:///C:/Users/USU=
ARIO/Desktop/package_aab.src%20package%20%E2%80%94%20AABB%20documentation_f=
iles/pygments.css">
    <link rel=3D"stylesheet" type=3D"text/css" href=3D"file:///C:/Users/USU=
ARIO/Desktop/package_aab.src%20package%20%E2%80%94%20AABB%20documentation_f=
iles/alabaster.css">
   =20
   =20
   =20
   =20
   =20
    <link rel=3D"index" title=3D"Index" href=3D"http://localhost:63342/AABB=
/Documentation/_build/html/genindex.html">
    <link rel=3D"search" title=3D"Search" href=3D"http://localhost:63342/AA=
BB/Documentation/_build/html/search.html">
    <link rel=3D"prev" title=3D"AABB" href=3D"http://localhost:63342/AABB/D=
ocumentation/_build/html/modules.html">
  =20
  <link rel=3D"stylesheet" href=3D"file:///C:/Users/USUARIO/Desktop/package=
_aab.src%20package%20%E2%80%94%20AABB%20documentation_files/custom.css" typ=
e=3D"text/css">
 =20
 =20
  <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D=
0.9, maximum-scale=3D0.9">

  </head><body>
 =20

    <div class=3D"document">
      <div class=3D"documentwrapper">
        <div class=3D"bodywrapper">
         =20

          <div class=3D"body" role=3D"main">
           =20
  <section id=3D"package-aab-src-package">
<h1>package_aab.src package<a class=3D"headerlink" href=3D"http://localhost=
:63342/AABB/Documentation/_build/html/package_aab.src.html#package-aab-src-=
package" title=3D"Permalink to this heading">=C2=B6</a></h1>
<section id=3D"submodules">
<h2>Submodules<a class=3D"headerlink" href=3D"http://localhost:63342/AABB/D=
ocumentation/_build/html/package_aab.src.html#submodules" title=3D"Permalin=
k to this heading">=C2=B6</a></h2>
</section>
<section id=3D"module-package_aab.src.Automata">
<span id=3D"package-aab-src-automata-module"></span><h2>package_aab.src.Aut=
omata module<a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Doc=
umentation/_build/html/package_aab.src.html#module-package_aab.src.Automata=
" title=3D"Permalink to this heading">=C2=B6</a></h2>
<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Automata.Automata">
<em class=3D"property"><span class=3D"pre">class</span><span class=3D"w"> <=
/span></em><span class=3D"sig-prename descclassname"><span class=3D"pre">pa=
ckage_aab.src.Automata.</span></span><span class=3D"sig-name descname"><spa=
n class=3D"pre">Automata</span></span><span class=3D"sig-paren">(</span><em=
 class=3D"sig-param"><span class=3D"n"><span class=3D"pre">alphabet</span><=
/span><span class=3D"p"><span class=3D"pre">:</span></span><span class=3D"w=
"> </span><span class=3D"n"><span class=3D"pre">str</span></span></em>, <em=
 class=3D"sig-param"><span class=3D"n"><span class=3D"pre">pattern</span></=
span><span class=3D"p"><span class=3D"pre">:</span></span><span class=3D"w"=
> </span><span class=3D"n"><span class=3D"pre">str</span></span></em><span =
class=3D"sig-paren">)</span><a class=3D"reference internal" href=3D"http://=
localhost:63342/AABB/Documentation/_build/html/_modules/package_aab/src/Aut=
omata.html#Automata"><span class=3D"viewcode-link"><span class=3D"pre">[sou=
rce]</span></span></a><a class=3D"headerlink" href=3D"http://localhost:6334=
2/AABB/Documentation/_build/html/package_aab.src.html#package_aab.src.Autom=
ata.Automata" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Bases: <code class=3D"xref py py-class docutils literal notranslate"=
><span class=3D"pre">object</span></code></p>
<p>Class implemented for the search of patterns in nucleotide sequences.
This pattern search method processes a sequence in a linear fashion,
reading from left to right.
The search is started at the first state of the =E2=80=9Cmachine=E2=80=9D a=
nd at the first character of the text,
at each step of the search the next character of the sequence is considered=
, the next state is searched
state and moves to a new state.
The number of states is equal to the length of the pattern plus one.
The pattern is found when the pattern being searched for is equal to the le=
ngth of the pattern entered.</p>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Automata.Automata.app=
lyNextState">
<span class=3D"sig-name descname"><span class=3D"pre">applyNextState</span>=
</span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span clas=
s=3D"n"><span class=3D"pre">seq</span></span><span class=3D"p"><span class=
=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><span c=
lass=3D"pre">str</span></span></em><span class=3D"sig-paren">)</span> <span=
 class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <spa=
n class=3D"sig-return-typehint"><span class=3D"pre">list</span></span></spa=
n><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docum=
entation/_build/html/_modules/package_aab/src/Automata.html#Automata.applyN=
extState"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span>=
</span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Docu=
mentation/_build/html/package_aab.src.html#package_aab.src.Automata.Automat=
a.applyNextState" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that returns a list of all next states.
:param seq: sequence entered
:return: list of next states</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Automata.Automata.bui=
ldTransitionTable">
<span class=3D"sig-name descname"><span class=3D"pre">buildTransitionTable<=
/span></span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><spa=
n class=3D"n"><span class=3D"pre">pattern</span></span><span class=3D"p"><s=
pan class=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n=
"><span class=3D"pre">str</span></span></em><span class=3D"sig-paren">)</sp=
an><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docu=
mentation/_build/html/_modules/package_aab/src/Automata.html#Automata.build=
TransitionTable"><span class=3D"viewcode-link"><span class=3D"pre">[source]=
</span></span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AA=
BB/Documentation/_build/html/package_aab.src.html#package_aab.src.Automata.=
Automata.buildTransitionTable" title=3D"Permalink to this definition">=C2=
=B6</a></dt>
<dd><p>Method that constructs the transition table. The transition table re=
turns the next
state of the automata machine from the current state and previous states.
:param pattern: pattern to search in the sequence</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Automata.Automata.nex=
tState">
<span class=3D"sig-name descname"><span class=3D"pre">nextState</span></spa=
n><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"=
n"><span class=3D"pre">current</span></span><span class=3D"p"><span class=
=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><span c=
lass=3D"pre">int</span></span></em>, <em class=3D"sig-param"><span class=3D=
"n"><span class=3D"pre">char</span></span><span class=3D"p"><span class=3D"=
pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=
=3D"pre">str</span></span></em><span class=3D"sig-paren">)</span> <span cla=
ss=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span cl=
ass=3D"sig-return-typehint"><span class=3D"pre">int</span></span></span><a =
class=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentat=
ion/_build/html/_modules/package_aab/src/Automata.html#Automata.nextState">=
<span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a=
><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/=
_build/html/package_aab.src.html#package_aab.src.Automata.Automata.nextStat=
e" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that returns the next state.
:param current: current state
param char: character of the pattern to search for
:return: the next state</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Automata.Automata.pat=
ternSeqPosition">
<span class=3D"sig-name descname"><span class=3D"pre">patternSeqPosition</s=
pan></span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span =
class=3D"n"><span class=3D"pre">seq</span></span><span class=3D"p"><span cl=
ass=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><spa=
n class=3D"pre">str</span></span></em><span class=3D"sig-paren">)</span> <s=
pan class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <=
span class=3D"sig-return-typehint"><span class=3D"pre">list</span></span></=
span><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Do=
cumentation/_build/html/_modules/package_aab/src/Automata.html#Automata.pat=
ternSeqPosition"><span class=3D"viewcode-link"><span class=3D"pre">[source]=
</span></span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AA=
BB/Documentation/_build/html/package_aab.src.html#package_aab.src.Automata.=
Automata.patternSeqPosition" title=3D"Permalink to this definition">=C2=B6<=
/a></dt>
<dd><p>Method that returns the list of positions where an occurrence of the=
 pattern in the sequence starts.
param seq: sequence entered
:return: list of the positions where an occurrence of the pattern in the se=
quence starts.</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Automata.Automata.pri=
ntAutomata">
<span class=3D"sig-name descname"><span class=3D"pre">printAutomata</span><=
/span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><=
a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Document=
ation/_build/html/_modules/package_aab/src/Automata.html#Automata.printAuto=
mata"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></sp=
an></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Document=
ation/_build/html/package_aab.src.html#package_aab.src.Automata.Automata.pr=
intAutomata" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method responsible for printing the results of the pattern search us=
ing the automata.</p>
</dd></dl>

</dd></dl>

<dl class=3D"py function">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Automata.overlap">
<span class=3D"sig-prename descclassname"><span class=3D"pre">package_aab.s=
rc.Automata.</span></span><span class=3D"sig-name descname"><span class=3D"=
pre">overlap</span></span><span class=3D"sig-paren">(</span><em class=3D"si=
g-param"><span class=3D"n"><span class=3D"pre">seq1</span></span><span clas=
s=3D"p"><span class=3D"pre">:</span></span><span class=3D"w"> </span><span =
class=3D"n"><span class=3D"pre">str</span></span></em>, <em class=3D"sig-pa=
ram"><span class=3D"n"><span class=3D"pre">seq2</span></span><span class=3D=
"p"><span class=3D"pre">:</span></span><span class=3D"w"> </span><span clas=
s=3D"n"><span class=3D"pre">str</span></span></em><span class=3D"sig-paren"=
>)</span> <span class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=
=92</span> <span class=3D"sig-return-typehint"><span class=3D"pre">int</spa=
n></span></span><a class=3D"reference internal" href=3D"http://localhost:63=
342/AABB/Documentation/_build/html/_modules/package_aab/src/Automata.html#o=
verlap"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></=
span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Docume=
ntation/_build/html/package_aab.src.html#package_aab.src.Automata.overlap" =
title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that overlaps two sequences and checks for matching
:param seq1: first string
:param seq2: second string
:return: last position of the smallest string that matches</p>
</dd></dl>

</section>
<section id=3D"module-package_aab.src.BTW">
<span id=3D"package-aab-src-btw-module"></span><h2>package_aab.src.BTW modu=
le<a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation=
/_build/html/package_aab.src.html#module-package_aab.src.BTW" title=3D"Perm=
alink to this heading">=C2=B6</a></h2>
<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.BTW.BWT">
<em class=3D"property"><span class=3D"pre">class</span><span class=3D"w"> <=
/span></em><span class=3D"sig-prename descclassname"><span class=3D"pre">pa=
ckage_aab.src.BTW.</span></span><span class=3D"sig-name descname"><span cla=
ss=3D"pre">BWT</span></span><span class=3D"sig-paren">(</span><em class=3D"=
sig-param"><span class=3D"n"><span class=3D"pre">seq</span></span><span cla=
ss=3D"o"><span class=3D"pre">=3D</span></span><span class=3D"default_value"=
><span class=3D"pre">''</span></span></em>, <em class=3D"sig-param"><span c=
lass=3D"n"><span class=3D"pre">buildsufarray</span></span><span class=3D"o"=
><span class=3D"pre">=3D</span></span><span class=3D"default_value"><span c=
lass=3D"pre">False</span></span></em>, <em class=3D"sig-param"><span class=
=3D"n"><span class=3D"pre">sa</span></span><span class=3D"o"><span class=3D=
"pre">=3D</span></span><span class=3D"default_value"><span class=3D"pre">No=
ne</span></span></em><span class=3D"sig-paren">)</span><a class=3D"referenc=
e internal" href=3D"http://localhost:63342/AABB/Documentation/_build/html/_=
modules/package_aab/src/BTW.html#BWT"><span class=3D"viewcode-link"><span c=
lass=3D"pre">[source]</span></span></a><a class=3D"headerlink" href=3D"http=
://localhost:63342/AABB/Documentation/_build/html/package_aab.src.html#pack=
age_aab.src.BTW.BWT" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Bases: <code class=3D"xref py py-class docutils literal notranslate"=
><span class=3D"pre">object</span></code></p>
<p>Class for implementing the Burrows-Hweeler algorithm where different met=
hods have been created. The algorithm is useful for
compressing large sequences, thus reducing their space. Moreover, it is pos=
sible to find patterns in the
compression format efficiently.</p>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.BTW.BWT.build_bwt">
<span class=3D"sig-name descname"><span class=3D"pre">build_bwt</span></spa=
n><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"=
n"><span class=3D"pre">text</span></span></em>, <em class=3D"sig-param"><sp=
an class=3D"n"><span class=3D"pre">buildsufarray</span></span><span class=
=3D"o"><span class=3D"pre">=3D</span></span><span class=3D"default_value"><=
span class=3D"pre">False</span></span></em><span class=3D"sig-paren">)</spa=
n> <span class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</sp=
an> <span class=3D"sig-return-typehint"><span class=3D"pre">str</span></spa=
n></span><a class=3D"reference internal" href=3D"http://localhost:63342/AAB=
B/Documentation/_build/html/_modules/package_aab/src/BTW.html#BWT.build_bwt=
"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span><=
/a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentatio=
n/_build/html/package_aab.src.html#package_aab.src.BTW.BWT.build_bwt" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method to build the matrix for Burrows-Wheeler transformation.
param text: sequence we want to use
param buildsufarray: parameter to create a suffix array. Default: False.</p=
>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.BTW.BWT.bw_matching">
<span class=3D"sig-name descname"><span class=3D"pre">bw_matching</span></s=
pan><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=
=3D"n"><span class=3D"pre">pattern=3D&lt;class</span> <span class=3D"pre">'=
str'&gt;</span></span></em><span class=3D"sig-paren">)</span> <span class=
=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span clas=
s=3D"sig-return-typehint"><span class=3D"pre">List</span><span class=3D"p">=
<span class=3D"pre">[</span></span><span class=3D"pre">int</span><span clas=
s=3D"p"><span class=3D"pre">]</span></span></span></span><a class=3D"refere=
nce internal" href=3D"http://localhost:63342/AABB/Documentation/_build/html=
/_modules/package_aab/src/BTW.html#BWT.bw_matching"><span class=3D"viewcode=
-link"><span class=3D"pre">[source]</span></span></a><a class=3D"headerlink=
" href=3D"http://localhost:63342/AABB/Documentation/_build/html/package_aab=
.src.html#package_aab.src.BTW.BWT.bw_matching" title=3D"Permalink to this d=
efinition">=C2=B6</a></dt>
<dd><p>Method to look for patterns from the Burrows-Wheeler transform.
:param pattern: pattern we want to find
:return: list with matches</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.BTW.BWT.bw_matching_p=
os">
<span class=3D"sig-name descname"><span class=3D"pre">bw_matching_pos</span=
></span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span cla=
ss=3D"n"><span class=3D"pre">patt</span></span></em><span class=3D"sig-pare=
n">)</span> <span class=3D"sig-return"><span class=3D"sig-return-icon">=E2=
=86=92</span> <span class=3D"sig-return-typehint"><span class=3D"pre">List<=
/span></span></span><a class=3D"reference internal" href=3D"http://localhos=
t:63342/AABB/Documentation/_build/html/_modules/package_aab/src/BTW.html#BW=
T.bw_matching_pos"><span class=3D"viewcode-link"><span class=3D"pre">[sourc=
e]</span></span></a><a class=3D"headerlink" href=3D"http://localhost:63342/=
AABB/Documentation/_build/html/package_aab.src.html#package_aab.src.BTW.BWT=
.bw_matching_pos" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that finds the matches of a pattern
:param patt: pattern we want to find
:return: list of matches found</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.BTW.BWT.get_first_col=
">
<span class=3D"sig-name descname"><span class=3D"pre">get_first_col</span><=
/span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span> =
<span class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span>=
 <span class=3D"sig-return-typehint"><span class=3D"pre">List</span><span c=
lass=3D"p"><span class=3D"pre">[</span></span><span class=3D"pre">str</span=
><span class=3D"p"><span class=3D"pre">]</span></span></span></span><a clas=
s=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentation/=
_build/html/_modules/package_aab/src/BTW.html#BWT.get_first_col"><span clas=
s=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a class=
=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_build/ht=
ml/package_aab.src.html#package_aab.src.BTW.BWT.get_first_col" title=3D"Per=
malink to this definition">=C2=B6</a></dt>
<dd><p>Method to retrieve the first column. note that the first column is t=
he alphabetical ordering of the transform
:return: list of the first column</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.BTW.BWT.inverse_bwt">
<span class=3D"sig-name descname"><span class=3D"pre">inverse_bwt</span></s=
pan><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span> <s=
pan class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <=
span class=3D"sig-return-typehint"><span class=3D"pre">str</span></span></s=
pan><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Doc=
umentation/_build/html/_modules/package_aab/src/BTW.html#BWT.inverse_bwt"><=
span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a>=
<a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_=
build/html/package_aab.src.html#package_aab.src.BTW.BWT.inverse_bwt" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method to get the original sequence
:return: string of the original sequence</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.BTW.BWT.last_to_first=
">
<span class=3D"sig-name descname"><span class=3D"pre">last_to_first</span><=
/span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span> =
<span class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span>=
 <span class=3D"sig-return-typehint"><span class=3D"pre">List</span></span>=
</span><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/=
Documentation/_build/html/_modules/package_aab/src/BTW.html#BWT.last_to_fir=
st"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span=
></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentat=
ion/_build/html/package_aab.src.html#package_aab.src.BTW.BWT.last_to_first"=
 title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method to create the table with the last column and the first column
:return: list of indices of the transform</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.BTW.BWT.set_bwt">
<span class=3D"sig-name descname"><span class=3D"pre">set_bwt</span></span>=
<span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n"=
><span class=3D"pre">bw</span></span></em><span class=3D"sig-paren">)</span=
><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docume=
ntation/_build/html/_modules/package_aab/src/BTW.html#BWT.set_bwt"><span cl=
ass=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a clas=
s=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_build/h=
tml/package_aab.src.html#package_aab.src.BTW.BWT.set_bwt" title=3D"Permalin=
k to this definition">=C2=B6</a></dt>
<dd></dd></dl>

</dd></dl>

<dl class=3D"py function">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.BTW.findithocc">
<span class=3D"sig-prename descclassname"><span class=3D"pre">package_aab.s=
rc.BTW.</span></span><span class=3D"sig-name descname"><span class=3D"pre">=
findithocc</span></span><span class=3D"sig-paren">(</span><em class=3D"sig-=
param"><span class=3D"n"><span class=3D"pre">le</span></span></em>, <em cla=
ss=3D"sig-param"><span class=3D"n"><span class=3D"pre">elem</span></span></=
em>, <em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">index</s=
pan></span></em><span class=3D"sig-paren">)</span><a class=3D"reference int=
ernal" href=3D"http://localhost:63342/AABB/Documentation/_build/html/_modul=
es/package_aab/src/BTW.html#findithocc"><span class=3D"viewcode-link"><span=
 class=3D"pre">[source]</span></span></a><a class=3D"headerlink" href=3D"ht=
tp://localhost:63342/AABB/Documentation/_build/html/package_aab.src.html#pa=
ckage_aab.src.BTW.findithocc" title=3D"Permalink to this definition">=C2=B6=
</a></dt>
<dd><p>Method to find out the position of the i-th occurrence of a symbol
in a list (returns -1 if it doesn=E2=80=99t occur).
param le: array to look for
param elem: element to search for
:param index: occurrence to look for</p>
</dd></dl>

</section>
<section id=3D"module-package_aab.src.BoyerMoore">
<span id=3D"package-aab-src-boyermoore-module"></span><h2>package_aab.src.B=
oyerMoore module<a class=3D"headerlink" href=3D"http://localhost:63342/AABB=
/Documentation/_build/html/package_aab.src.html#module-package_aab.src.Boye=
rMoore" title=3D"Permalink to this heading">=C2=B6</a></h2>
<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.BoyerMoore.BoyerMoore=
">
<em class=3D"property"><span class=3D"pre">class</span><span class=3D"w"> <=
/span></em><span class=3D"sig-prename descclassname"><span class=3D"pre">pa=
ckage_aab.src.BoyerMoore.</span></span><span class=3D"sig-name descname"><s=
pan class=3D"pre">BoyerMoore</span></span><span class=3D"sig-paren">(</span=
><em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">alphabet=3D&=
lt;class</span> <span class=3D"pre">'str'&gt;</span></span></em>, <em class=
=3D"sig-param"><span class=3D"n"><span class=3D"pre">pattern=3D&lt;class</s=
pan> <span class=3D"pre">'str'&gt;</span></span></em><span class=3D"sig-par=
en">)</span><a class=3D"reference internal" href=3D"http://localhost:63342/=
AABB/Documentation/_build/html/_modules/package_aab/src/BoyerMoore.html#Boy=
erMoore"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span><=
/span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Docum=
entation/_build/html/package_aab.src.html#package_aab.src.BoyerMoore.BoyerM=
oore" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Bases: <code class=3D"xref py py-class docutils literal notranslate"=
><span class=3D"pre">object</span></code></p>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.BoyerMoore.BoyerMoore=
.process_bcr">
<span class=3D"sig-name descname"><span class=3D"pre">process_bcr</span></s=
pan><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><a =
class=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentat=
ion/_build/html/_modules/package_aab/src/BoyerMoore.html#BoyerMoore.process=
_bcr"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></sp=
an></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Document=
ation/_build/html/package_aab.src.html#package_aab.src.BoyerMoore.BoyerMoor=
e.process_bcr" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Bad Character rule implementation.
Method where a dictionary is created with all possible symbols (occ) as key=
s, and the values define
the rightmost position at which the symbol appears in the pattern (-1 means=
 it does not occur). This allows you to
quickly calculate the number of positions to follow to search according to =
the mismatch in the pattern (value for
the symbol in the dictionary). Note that this value can be negative, meanin=
g that the rule in this case
is not useful and is ignored in the next iteration.</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.BoyerMoore.BoyerMoore=
.process_gsr">
<span class=3D"sig-name descname"><span class=3D"pre">process_gsr</span></s=
pan><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><a =
class=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentat=
ion/_build/html/_modules/package_aab/src/BoyerMoore.html#BoyerMoore.process=
_gsr"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></sp=
an></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Document=
ation/_build/html/package_aab.src.html#package_aab.src.BoyerMoore.BoyerMoor=
e.process_gsr" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Good Suffix rule implementation.
Calculates the value of the f list (the length of the longest proper suffix=
 that matches the suffix of the pattern),
and s list (the length of the longest proper suffix that matches the prefix=
 of the pattern).</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.BoyerMoore.BoyerMoore=
.search_pattern">
<span class=3D"sig-name descname"><span class=3D"pre">search_pattern</span>=
</span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span clas=
s=3D"n"><span class=3D"pre">text=3D&lt;class</span> <span class=3D"pre">'st=
r'&gt;</span></span></em><span class=3D"sig-paren">)</span> <span class=3D"=
sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span class=3D=
"sig-return-typehint"><span class=3D"pre">List</span><span class=3D"p"><spa=
n class=3D"pre">[</span></span><span class=3D"pre">int</span><span class=3D=
"p"><span class=3D"pre">]</span></span></span></span><a class=3D"reference =
internal" href=3D"http://localhost:63342/AABB/Documentation/_build/html/_mo=
dules/package_aab/src/BoyerMoore.html#BoyerMoore.search_pattern"><span clas=
s=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a class=
=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_build/ht=
ml/package_aab.src.html#package_aab.src.BoyerMoore.BoyerMoore.search_patter=
n" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>This method allows to find a pattern in a given text, based on the o=
bject of the class that contains the
pattern and its alphabet.
:param text: string of the text where we want to look for our pattern
:return: list with the indexes where the pattern starts</p>
</dd></dl>

</dd></dl>

</section>
<section id=3D"package-aab-src-eamotifs-module">
<h2>package_aab.src.EAMotifs module<a class=3D"headerlink" href=3D"http://l=
ocalhost:63342/AABB/Documentation/_build/html/package_aab.src.html#package-=
aab-src-eamotifs-module" title=3D"Permalink to this heading">=C2=B6</a></h2=
>
</section>
<section id=3D"module-package_aab.src.EvolAlgorithm">
<span id=3D"package-aab-src-evolalgorithm-module"></span><h2>package_aab.sr=
c.EvolAlgorithm module<a class=3D"headerlink" href=3D"http://localhost:6334=
2/AABB/Documentation/_build/html/package_aab.src.html#module-package_aab.sr=
c.EvolAlgorithm" title=3D"Permalink to this heading">=C2=B6</a></h2>
<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.EvolAlgorithm.EvolAlg=
orithm">
<em class=3D"property"><span class=3D"pre">class</span><span class=3D"w"> <=
/span></em><span class=3D"sig-prename descclassname"><span class=3D"pre">pa=
ckage_aab.src.EvolAlgorithm.</span></span><span class=3D"sig-name descname"=
><span class=3D"pre">EvolAlgorithm</span></span><span class=3D"sig-paren">(=
</span><em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">popsiz=
e</span></span><span class=3D"p"><span class=3D"pre">:</span></span><span c=
lass=3D"w"> </span><span class=3D"n"><span class=3D"pre">int</span></span><=
/em>, <em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">numits<=
/span></span><span class=3D"p"><span class=3D"pre">:</span></span><span cla=
ss=3D"w"> </span><span class=3D"n"><span class=3D"pre">int</span></span></e=
m>, <em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">noffsprin=
g</span></span><span class=3D"p"><span class=3D"pre">:</span></span><span c=
lass=3D"w"> </span><span class=3D"n"><span class=3D"pre">int</span></span><=
/em>, <em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">indsize=
</span></span><span class=3D"p"><span class=3D"pre">:</span></span><span cl=
ass=3D"w"> </span><span class=3D"n"><span class=3D"pre">int</span></span></=
em><span class=3D"sig-paren">)</span><a class=3D"reference internal" href=
=3D"http://localhost:63342/AABB/Documentation/_build/html/_modules/package_=
aab/src/EvolAlgorithm.html#EvolAlgorithm"><span class=3D"viewcode-link"><sp=
an class=3D"pre">[source]</span></span></a><a class=3D"headerlink" href=3D"=
http://localhost:63342/AABB/Documentation/_build/html/package_aab.src.html#=
package_aab.src.EvolAlgorithm.EvolAlgorithm" title=3D"Permalink to this def=
inition">=C2=B6</a></dt>
<dd><p>Bases: <code class=3D"xref py py-class docutils literal notranslate"=
><span class=3D"pre">object</span></code></p>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.EvolAlgorithm.EvolAlg=
orithm.evaluate">
<span class=3D"sig-name descname"><span class=3D"pre">evaluate</span></span=
><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n=
"><span class=3D"pre">indivs</span></span><span class=3D"p"><span class=3D"=
pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=
=3D"pre">list</span></span></em><span class=3D"sig-paren">)</span> <span cl=
ass=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span c=
lass=3D"sig-return-typehint"><span class=3D"pre">None</span></span></span><=
a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Document=
ation/_build/html/_modules/package_aab/src/EvolAlgorithm.html#EvolAlgorithm=
.evaluate"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span=
></span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Doc=
umentation/_build/html/package_aab.src.html#package_aab.src.EvolAlgorithm.E=
volAlgorithm.evaluate" title=3D"Permalink to this definition">=C2=B6</a></d=
t>
<dd><p>Method that calculates the score for each individual, setting its fi=
tness.
:param indivs: list that represents the individuals solution.
:return:</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.EvolAlgorithm.EvolAlg=
orithm.initPopul">
<span class=3D"sig-name descname"><span class=3D"pre">initPopul</span></spa=
n><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"=
n"><span class=3D"pre">indsize</span></span><span class=3D"p"><span class=
=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><span c=
lass=3D"pre">int</span></span></em><span class=3D"sig-paren">)</span> <span=
 class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <spa=
n class=3D"sig-return-typehint"><span class=3D"pre">None</span></span></spa=
n><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docum=
entation/_build/html/_modules/package_aab/src/EvolAlgorithm.html#EvolAlgori=
thm.initPopul"><span class=3D"viewcode-link"><span class=3D"pre">[source]</=
span></span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB=
/Documentation/_build/html/package_aab.src.html#package_aab.src.EvolAlgorit=
hm.EvolAlgorithm.initPopul" title=3D"Permalink to this definition">=C2=B6</=
a></dt>
<dd><p>Method that initializes the population with a given size for individ=
uals.
:param indsize:  size of individuals (list of genes)
:return:</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.EvolAlgorithm.EvolAlg=
orithm.iteration">
<span class=3D"sig-name descname"><span class=3D"pre">iteration</span></spa=
n><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span> <spa=
n class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <sp=
an class=3D"sig-return-typehint"><span class=3D"pre">None</span></span></sp=
an><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docu=
mentation/_build/html/_modules/package_aab/src/EvolAlgorithm.html#EvolAlgor=
ithm.iteration"><span class=3D"viewcode-link"><span class=3D"pre">[source]<=
/span></span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AAB=
B/Documentation/_build/html/package_aab.src.html#package_aab.src.EvolAlgori=
thm.EvolAlgorithm.iteration" title=3D"Permalink to this definition">=C2=B6<=
/a></dt>
<dd><p>Method auxiliary of the Evolutionary Algorithm cycle (based on the n=
umber of iterations wanted).
:return:</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.EvolAlgorithm.EvolAlg=
orithm.printBestSolution">
<span class=3D"sig-name descname"><span class=3D"pre">printBestSolution</sp=
an></span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</sp=
an><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docu=
mentation/_build/html/_modules/package_aab/src/EvolAlgorithm.html#EvolAlgor=
ithm.printBestSolution"><span class=3D"viewcode-link"><span class=3D"pre">[=
source]</span></span></a><a class=3D"headerlink" href=3D"http://localhost:6=
3342/AABB/Documentation/_build/html/package_aab.src.html#package_aab.src.Ev=
olAlgorithm.EvolAlgorithm.printBestSolution" title=3D"Permalink to this def=
inition">=C2=B6</a></dt>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.EvolAlgorithm.EvolAlg=
orithm.run">
<span class=3D"sig-name descname"><span class=3D"pre">run</span></span><spa=
n class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span> <span clas=
s=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span cla=
ss=3D"sig-return-typehint"><span class=3D"pre">None</span></span></span><a =
class=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentat=
ion/_build/html/_modules/package_aab/src/EvolAlgorithm.html#EvolAlgorithm.r=
un"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span=
></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentat=
ion/_build/html/package_aab.src.html#package_aab.src.EvolAlgorithm.EvolAlgo=
rithm.run" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that runs the evolutionary algorithm cycle until finding the =
best solution or the number of iterations is reached.
:return:</p>
</dd></dl>

</dd></dl>

</section>
<section id=3D"module-package_aab.src.Indiv">
<span id=3D"package-aab-src-indiv-module"></span><h2>package_aab.src.Indiv =
module<a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documenta=
tion/_build/html/package_aab.src.html#module-package_aab.src.Indiv" title=
=3D"Permalink to this heading">=C2=B6</a></h2>
<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Indiv.Indiv">
<em class=3D"property"><span class=3D"pre">class</span><span class=3D"w"> <=
/span></em><span class=3D"sig-prename descclassname"><span class=3D"pre">pa=
ckage_aab.src.Indiv.</span></span><span class=3D"sig-name descname"><span c=
lass=3D"pre">Indiv</span></span><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n"><span class=3D"pre">size</span></span></em=
>, <em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">genes</spa=
n></span><span class=3D"o"><span class=3D"pre">=3D</span></span><span class=
=3D"default_value"><span class=3D"pre">[]</span></span></em>, <em class=3D"=
sig-param"><span class=3D"n"><span class=3D"pre">lb</span></span><span clas=
s=3D"o"><span class=3D"pre">=3D</span></span><span class=3D"default_value">=
<span class=3D"pre">0</span></span></em>, <em class=3D"sig-param"><span cla=
ss=3D"n"><span class=3D"pre">ub</span></span><span class=3D"o"><span class=
=3D"pre">=3D</span></span><span class=3D"default_value"><span class=3D"pre"=
>1</span></span></em><span class=3D"sig-paren">)</span><a class=3D"referenc=
e internal" href=3D"http://localhost:63342/AABB/Documentation/_build/html/_=
modules/package_aab/src/Indiv.html#Indiv"><span class=3D"viewcode-link"><sp=
an class=3D"pre">[source]</span></span></a><a class=3D"headerlink" href=3D"=
http://localhost:63342/AABB/Documentation/_build/html/package_aab.src.html#=
package_aab.src.Indiv.Indiv" title=3D"Permalink to this definition">=C2=B6<=
/a></dt>
<dd><p>Bases: <code class=3D"xref py py-class docutils literal notranslate"=
><span class=3D"pre">object</span></code></p>
<p># The Indiv class represents an individual in a genetic algorithm.
It contains methods for initialization, mutation, crossover, and fitness ev=
aluation.</p>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Indiv.Indiv.crossover=
">
<span class=3D"sig-name descname"><span class=3D"pre">crossover</span></spa=
n><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"=
n"><span class=3D"pre">indiv2</span></span></em><span class=3D"sig-paren">)=
</span><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/=
Documentation/_build/html/_modules/package_aab/src/Indiv.html#Indiv.crossov=
er"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span=
></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentat=
ion/_build/html/package_aab.src.html#package_aab.src.Indiv.Indiv.crossover"=
 title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Indiv.Indiv.getFitnes=
s">
<span class=3D"sig-name descname"><span class=3D"pre">getFitness</span></sp=
an><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><a c=
lass=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentati=
on/_build/html/_modules/package_aab/src/Indiv.html#Indiv.getFitness"><span =
class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a cl=
ass=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_build=
/html/package_aab.src.html#package_aab.src.Indiv.Indiv.getFitness" title=3D=
"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Indiv.Indiv.getGenes"=
>
<span class=3D"sig-name descname"><span class=3D"pre">getGenes</span></span=
><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><a cla=
ss=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentation=
/_build/html/_modules/package_aab/src/Indiv.html#Indiv.getGenes"><span clas=
s=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a class=
=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_build/ht=
ml/package_aab.src.html#package_aab.src.Indiv.Indiv.getGenes" title=3D"Perm=
alink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Indiv.Indiv.initRando=
m">
<span class=3D"sig-name descname"><span class=3D"pre">initRandom</span></sp=
an><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D=
"n"><span class=3D"pre">size</span></span></em><span class=3D"sig-paren">)<=
/span><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/D=
ocumentation/_build/html/_modules/package_aab/src/Indiv.html#Indiv.initRand=
om"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span=
></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentat=
ion/_build/html/package_aab.src.html#package_aab.src.Indiv.Indiv.initRandom=
" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Indiv.Indiv.mutation"=
>
<span class=3D"sig-name descname"><span class=3D"pre">mutation</span></span=
><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><a cla=
ss=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentation=
/_build/html/_modules/package_aab/src/Indiv.html#Indiv.mutation"><span clas=
s=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a class=
=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_build/ht=
ml/package_aab.src.html#package_aab.src.Indiv.Indiv.mutation" title=3D"Perm=
alink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Indiv.Indiv.one_pt_cr=
ossover">
<span class=3D"sig-name descname"><span class=3D"pre">one_pt_crossover</spa=
n></span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span cl=
ass=3D"n"><span class=3D"pre">indiv2</span></span></em><span class=3D"sig-p=
aren">)</span><a class=3D"reference internal" href=3D"http://localhost:6334=
2/AABB/Documentation/_build/html/_modules/package_aab/src/Indiv.html#Indiv.=
one_pt_crossover"><span class=3D"viewcode-link"><span class=3D"pre">[source=
]</span></span></a><a class=3D"headerlink" href=3D"http://localhost:63342/A=
ABB/Documentation/_build/html/package_aab.src.html#package_aab.src.Indiv.In=
div.one_pt_crossover" title=3D"Permalink to this definition">=C2=B6</a></dt=
>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Indiv.Indiv.setFitnes=
s">
<span class=3D"sig-name descname"><span class=3D"pre">setFitness</span></sp=
an><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D=
"n"><span class=3D"pre">fit</span></span></em><span class=3D"sig-paren">)</=
span><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Do=
cumentation/_build/html/_modules/package_aab/src/Indiv.html#Indiv.setFitnes=
s"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span>=
</a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentati=
on/_build/html/package_aab.src.html#package_aab.src.Indiv.Indiv.setFitness"=
 title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

</dd></dl>

<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Indiv.IndivInt">
<em class=3D"property"><span class=3D"pre">class</span><span class=3D"w"> <=
/span></em><span class=3D"sig-prename descclassname"><span class=3D"pre">pa=
ckage_aab.src.Indiv.</span></span><span class=3D"sig-name descname"><span c=
lass=3D"pre">IndivInt</span></span><span class=3D"sig-paren">(</span><em cl=
ass=3D"sig-param"><span class=3D"n"><span class=3D"pre">size</span></span><=
span class=3D"p"><span class=3D"pre">:</span></span><span class=3D"w"> </sp=
an><span class=3D"n"><span class=3D"pre">int</span></span></em>, <em class=
=3D"sig-param"><span class=3D"n"><span class=3D"pre">genes</span></span><sp=
an class=3D"p"><span class=3D"pre">:</span></span><span class=3D"w"> </span=
><span class=3D"n"><span class=3D"pre">list</span></span><span class=3D"w">=
 </span><span class=3D"o"><span class=3D"pre">=3D</span></span><span class=
=3D"w"> </span><span class=3D"default_value"><span class=3D"pre">[]</span><=
/span></em>, <em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">=
lb</span></span><span class=3D"p"><span class=3D"pre">:</span></span><span =
class=3D"w"> </span><span class=3D"n"><span class=3D"pre">int</span></span>=
<span class=3D"w"> </span><span class=3D"o"><span class=3D"pre">=3D</span><=
/span><span class=3D"w"> </span><span class=3D"default_value"><span class=
=3D"pre">0</span></span></em>, <em class=3D"sig-param"><span class=3D"n"><s=
pan class=3D"pre">ub</span></span><span class=3D"p"><span class=3D"pre">:</=
span></span><span class=3D"w"> </span><span class=3D"n"><span class=3D"pre"=
>int</span></span><span class=3D"w"> </span><span class=3D"o"><span class=
=3D"pre">=3D</span></span><span class=3D"w"> </span><span class=3D"default_=
value"><span class=3D"pre">1</span></span></em><span class=3D"sig-paren">)<=
/span><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/D=
ocumentation/_build/html/_modules/package_aab/src/Indiv.html#IndivInt"><spa=
n class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a =
class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_bui=
ld/html/package_aab.src.html#package_aab.src.Indiv.IndivInt" title=3D"Perma=
link to this definition">=C2=B6</a></dt>
<dd><p>Bases: <a class=3D"reference internal" href=3D"http://localhost:6334=
2/AABB/Documentation/_build/html/package_aab.src.html#package_aab.src.Indiv=
.Indiv" title=3D"package_aab.src.Indiv.Indiv"><code class=3D"xref py py-cla=
ss docutils literal notranslate"><span class=3D"pre">Indiv</span></code></a=
></p>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Indiv.IndivInt.initRa=
ndom">
<span class=3D"sig-name descname"><span class=3D"pre">initRandom</span></sp=
an><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D=
"n"><span class=3D"pre">size</span></span><span class=3D"p"><span class=3D"=
pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=
=3D"pre">int</span></span></em><span class=3D"sig-paren">)</span> <span cla=
ss=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span cl=
ass=3D"sig-return-typehint"><span class=3D"pre">None</span></span></span><a=
 class=3D"reference internal" href=3D"http://localhost:63342/AABB/Documenta=
tion/_build/html/_modules/package_aab/src/Indiv.html#IndivInt.initRandom"><=
span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a>=
<a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_=
build/html/package_aab.src.html#package_aab.src.Indiv.IndivInt.initRandom" =
title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that generates a list of genes of the individual (random int =
numbers between upper and lower bounds)
:param size:  number of genes to generate
:return:</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Indiv.IndivInt.mutati=
on">
<span class=3D"sig-name descname"><span class=3D"pre">mutation</span></span=
><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><a cla=
ss=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentation=
/_build/html/_modules/package_aab/src/Indiv.html#IndivInt.mutation"><span c=
lass=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a cla=
ss=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_build/=
html/package_aab.src.html#package_aab.src.Indiv.IndivInt.mutation" title=3D=
"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

</dd></dl>

<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Indiv.IndivReal">
<em class=3D"property"><span class=3D"pre">class</span><span class=3D"w"> <=
/span></em><span class=3D"sig-prename descclassname"><span class=3D"pre">pa=
ckage_aab.src.Indiv.</span></span><span class=3D"sig-name descname"><span c=
lass=3D"pre">IndivReal</span></span><span class=3D"sig-paren">(</span><em c=
lass=3D"sig-param"><span class=3D"n"><span class=3D"pre">size</span></span>=
</em>, <em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">genes<=
/span></span><span class=3D"o"><span class=3D"pre">=3D</span></span><span c=
lass=3D"default_value"><span class=3D"pre">[]</span></span></em>, <em class=
=3D"sig-param"><span class=3D"n"><span class=3D"pre">lb</span></span><span =
class=3D"o"><span class=3D"pre">=3D</span></span><span class=3D"default_val=
ue"><span class=3D"pre">0</span></span></em>, <em class=3D"sig-param"><span=
 class=3D"n"><span class=3D"pre">ub</span></span><span class=3D"o"><span cl=
ass=3D"pre">=3D</span></span><span class=3D"default_value"><span class=3D"p=
re">1</span></span></em><span class=3D"sig-paren">)</span><a class=3D"refer=
ence internal" href=3D"http://localhost:63342/AABB/Documentation/_build/htm=
l/_modules/package_aab/src/Indiv.html#IndivReal"><span class=3D"viewcode-li=
nk"><span class=3D"pre">[source]</span></span></a><a class=3D"headerlink" h=
ref=3D"http://localhost:63342/AABB/Documentation/_build/html/package_aab.sr=
c.html#package_aab.src.Indiv.IndivReal" title=3D"Permalink to this definiti=
on">=C2=B6</a></dt>
<dd><p>Bases: <a class=3D"reference internal" href=3D"http://localhost:6334=
2/AABB/Documentation/_build/html/package_aab.src.html#package_aab.src.Indiv=
.Indiv" title=3D"package_aab.src.Indiv.Indiv"><code class=3D"xref py py-cla=
ss docutils literal notranslate"><span class=3D"pre">Indiv</span></code></a=
></p>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Indiv.IndivReal.initR=
andom">
<span class=3D"sig-name descname"><span class=3D"pre">initRandom</span></sp=
an><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D=
"n"><span class=3D"pre">size</span></span><span class=3D"p"><span class=3D"=
pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=
=3D"pre">int</span></span></em><span class=3D"sig-paren">)</span> <span cla=
ss=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span cl=
ass=3D"sig-return-typehint"><span class=3D"pre">None</span></span></span><a=
 class=3D"reference internal" href=3D"http://localhost:63342/AABB/Documenta=
tion/_build/html/_modules/package_aab/src/Indiv.html#IndivReal.initRandom">=
<span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a=
><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/=
_build/html/package_aab.src.html#package_aab.src.Indiv.IndivReal.initRandom=
" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Indiv.IndivReal.mutat=
ion">
<span class=3D"sig-name descname"><span class=3D"pre">mutation</span></span=
><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span> <span=
 class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <spa=
n class=3D"sig-return-typehint"><span class=3D"pre">None</span></span></spa=
n><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docum=
entation/_build/html/_modules/package_aab/src/Indiv.html#IndivReal.mutation=
"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span><=
/a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentatio=
n/_build/html/package_aab.src.html#package_aab.src.Indiv.IndivReal.mutation=
" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

</dd></dl>

<dl class=3D"py function">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Indiv.random">
<span class=3D"sig-prename descclassname"><span class=3D"pre">package_aab.s=
rc.Indiv.</span></span><span class=3D"sig-name descname"><span class=3D"pre=
">random</span></span><span class=3D"sig-paren">(</span><span class=3D"sig-=
paren">)</span> <span class=3D"sig-return"><span class=3D"sig-return-icon">=
=E2=86=92</span> <span class=3D"sig-return-typehint"><span class=3D"pre">x<=
/span> <span class=3D"pre">in</span> <span class=3D"pre">the</span> <span c=
lass=3D"pre">interval</span> <span class=3D"pre">[0,</span> <span class=3D"=
pre">1).</span></span></span><a class=3D"headerlink" href=3D"http://localho=
st:63342/AABB/Documentation/_build/html/package_aab.src.html#package_aab.sr=
c.Indiv.random" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

</section>
<section id=3D"module-package_aab.src.MotifFinding">
<span id=3D"package-aab-src-motiffinding-module"></span><h2>package_aab.src=
.MotifFinding module<a class=3D"headerlink" href=3D"http://localhost:63342/=
AABB/Documentation/_build/html/package_aab.src.html#module-package_aab.src.=
MotifFinding" title=3D"Permalink to this heading">=C2=B6</a></h2>
<p>Class: MotifFinding</p>
<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MotifFinding.MotifFin=
ding">
<em class=3D"property"><span class=3D"pre">class</span><span class=3D"w"> <=
/span></em><span class=3D"sig-prename descclassname"><span class=3D"pre">pa=
ckage_aab.src.MotifFinding.</span></span><span class=3D"sig-name descname">=
<span class=3D"pre">MotifFinding</span></span><span class=3D"sig-paren">(</=
span><em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">size</sp=
an></span><span class=3D"p"><span class=3D"pre">:</span></span><span class=
=3D"w"> </span><span class=3D"n"><span class=3D"pre">int</span></span><span=
 class=3D"w"> </span><span class=3D"o"><span class=3D"pre">=3D</span></span=
><span class=3D"w"> </span><span class=3D"default_value"><span class=3D"pre=
">8</span></span></em>, <em class=3D"sig-param"><span class=3D"n"><span cla=
ss=3D"pre">seqs</span></span><span class=3D"o"><span class=3D"pre">=3D</spa=
n></span><span class=3D"default_value"><span class=3D"pre">None</span></spa=
n></em><span class=3D"sig-paren">)</span><a class=3D"reference internal" hr=
ef=3D"http://localhost:63342/AABB/Documentation/_build/html/_modules/packag=
e_aab/src/MotifFinding.html#MotifFinding"><span class=3D"viewcode-link"><sp=
an class=3D"pre">[source]</span></span></a><a class=3D"headerlink" href=3D"=
http://localhost:63342/AABB/Documentation/_build/html/package_aab.src.html#=
package_aab.src.MotifFinding.MotifFinding" title=3D"Permalink to this defin=
ition">=C2=B6</a></dt>
<dd><p>Bases: <code class=3D"xref py py-class docutils literal notranslate"=
><span class=3D"pre">object</span></code></p>
<p>Class implemented for searching for recurrent patterns in a biological s=
equence,
which can be DNA or proteins.
The pattern to look for can be an exact sequence or a degenerate consensus =
in which there are
ambiguous characters.</p>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MotifFinding.MotifFin=
ding.branchAndBound">
<span class=3D"sig-name descname"><span class=3D"pre">branchAndBound</span>=
</span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span>=
 <span class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span=
> <span class=3D"sig-return-typehint"><span class=3D"pre">Optional</span><s=
pan class=3D"p"><span class=3D"pre">[</span></span><span class=3D"pre">Unio=
n</span><span class=3D"p"><span class=3D"pre">[</span></span><span class=3D=
"pre">list</span><span class=3D"p"><span class=3D"pre">,</span></span><span=
 class=3D"w"> </span><span class=3D"pre">List</span><span class=3D"p"><span=
 class=3D"pre">[</span></span><span class=3D"pre">int</span><span class=3D"=
p"><span class=3D"pre">]</span></span><span class=3D"p"><span class=3D"pre"=
>]</span></span><span class=3D"p"><span class=3D"pre">]</span></span></span=
></span><a class=3D"reference internal" href=3D"http://localhost:63342/AABB=
/Documentation/_build/html/_modules/package_aab/src/MotifFinding.html#Motif=
Finding.branchAndBound"><span class=3D"viewcode-link"><span class=3D"pre">[=
source]</span></span></a><a class=3D"headerlink" href=3D"http://localhost:6=
3342/AABB/Documentation/_build/html/package_aab.src.html#package_aab.src.Mo=
tifFinding.MotifFinding.branchAndBound" title=3D"Permalink to this definiti=
on">=C2=B6</a></dt>
<dd><p>Method that implements to iterate over the initial position of the l=
ist of solutions to find the best solution
motif.
:return:  the vector of starting positions s (representative of the best mo=
tif found)</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MotifFinding.MotifFin=
ding.bypass">
<span class=3D"sig-name descname"><span class=3D"pre">bypass</span></span><=
span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n">=
<span class=3D"pre">s</span></span><span class=3D"p"><span class=3D"pre">:<=
/span></span><span class=3D"w"> </span><span class=3D"n"><span class=3D"pre=
">list</span></span></em><span class=3D"sig-paren">)</span> <span class=3D"=
sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span class=3D=
"sig-return-typehint"><span class=3D"pre">list</span></span></span><a class=
=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentation/_=
build/html/_modules/package_aab/src/MotifFinding.html#MotifFinding.bypass">=
<span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a=
><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/=
_build/html/package_aab.src.html#package_aab.src.MotifFinding.MotifFinding.=
bypass" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method implemented to bypass the condition explained above.
:param s: index list of the motifs in the entered sequences.
:return: list of indexes with zeros in the non-corresponding positions.</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MotifFinding.MotifFin=
ding.createMotifFromIndexes">
<span class=3D"sig-name descname"><span class=3D"pre">createMotifFromIndexe=
s</span></span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><s=
pan class=3D"n"><span class=3D"pre">indexes</span></span><span class=3D"p">=
<span class=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D=
"n"><span class=3D"pre">list</span></span></em><span class=3D"sig-paren">)<=
/span><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/D=
ocumentation/_build/html/_modules/package_aab/src/MotifFinding.html#MotifFi=
nding.createMotifFromIndexes"><span class=3D"viewcode-link"><span class=3D"=
pre">[source]</span></span></a><a class=3D"headerlink" href=3D"http://local=
host:63342/AABB/Documentation/_build/html/package_aab.src.html#package_aab.=
src.MotifFinding.MotifFinding.createMotifFromIndexes" title=3D"Permalink to=
 this definition">=C2=B6</a></dt>
<dd><p>Method that implements probabilistic motifs of type MyMotif.
:param indexes: list of the indexes of the initial positions of the motif
of the sub-sequences used to create the motif.
:return:</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MotifFinding.MotifFin=
ding.exhaustiveSearch">
<span class=3D"sig-name descname"><span class=3D"pre">exhaustiveSearch</spa=
n></span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</spa=
n> <span class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</sp=
an> <span class=3D"sig-return-typehint"><span class=3D"pre">list</span></sp=
an></span><a class=3D"reference internal" href=3D"http://localhost:63342/AA=
BB/Documentation/_build/html/_modules/package_aab/src/MotifFinding.html#Mot=
ifFinding.exhaustiveSearch"><span class=3D"viewcode-link"><span class=3D"pr=
e">[source]</span></span></a><a class=3D"headerlink" href=3D"http://localho=
st:63342/AABB/Documentation/_build/html/package_aab.src.html#package_aab.sr=
c.MotifFinding.MotifFinding.exhaustiveSearch" title=3D"Permalink to this de=
finition">=C2=B6</a></dt>
<dd><p>Method implemented to find the motif with the vector of best scores.
This method allows to derive the profile and the consensus sequence.
:return: vector of best scores</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MotifFinding.MotifFin=
ding.gibbs">
<span class=3D"sig-name descname"><span class=3D"pre">gibbs</span></span><s=
pan class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n"><=
span class=3D"pre">num_iterations</span></span><span class=3D"p"><span clas=
s=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><span =
class=3D"pre">int</span></span></em><span class=3D"sig-paren">)</span> <spa=
n class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <sp=
an class=3D"sig-return-typehint"><span class=3D"pre">list</span></span></sp=
an><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docu=
mentation/_build/html/_modules/package_aab/src/MotifFinding.html#MotifFindi=
ng.gibbs"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span>=
</span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Docu=
mentation/_build/html/package_aab.src.html#package_aab.src.MotifFinding.Mot=
ifFinding.gibbs" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that implements the Gibbs Sampling algorithm, by choosing new=
 segments at random (increasing
the possibilities of converging to a correct solution). The algorithm start=
s with a set of randomly
selected motif positions, and then in each iteration, it chooses one sequen=
ce at random, removes it from
consideration, and recomputes the motif position based on the remaining seq=
uences. This process continues
for a fixed number of iterations, after which the algorithm returns the bes=
t set of motif positions found so far.
:param num_iterations: number of iterations
:return: list of best scores</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MotifFinding.MotifFin=
ding.heuristicConsensus">
<span class=3D"sig-name descname"><span class=3D"pre">heuristicConsensus</s=
pan></span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</s=
pan> <span class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</=
span> <span class=3D"sig-return-typehint"><span class=3D"pre">list</span></=
span></span><a class=3D"reference internal" href=3D"http://localhost:63342/=
AABB/Documentation/_build/html/_modules/package_aab/src/MotifFinding.html#M=
otifFinding.heuristicConsensus"><span class=3D"viewcode-link"><span class=
=3D"pre">[source]</span></span></a><a class=3D"headerlink" href=3D"http://l=
ocalhost:63342/AABB/Documentation/_build/html/package_aab.src.html#package_=
aab.src.MotifFinding.MotifFinding.heuristicConsensus" title=3D"Permalink to=
 this definition">=C2=B6</a></dt>
<dd><p>=E2=80=98=E2=80=99=E2=80=99Method that computes the heuristic consen=
sus algorithm:
- Considering only the first two sequences, choose the initial positions s1=
 and s2 that give a better score.
- For each of the following sequences, iteratively, choose the best startin=
g position in the sequence, in order</p>
<blockquote>
<div><p>to maximize the score.</p>
</div></blockquote>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Returns<span class=3D"colon">:</span></dt>
<dd class=3D"field-odd"><p>list of starting positions s (representative of =
the best motif found)</p>
</dd>
</dl>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MotifFinding.MotifFin=
ding.heuristicStochastic">
<span class=3D"sig-name descname"><span class=3D"pre">heuristicStochastic</=
span></span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</=
span> <span class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92<=
/span> <span class=3D"sig-return-typehint"><span class=3D"pre">list</span><=
/span></span><a class=3D"reference internal" href=3D"http://localhost:63342=
/AABB/Documentation/_build/html/_modules/package_aab/src/MotifFinding.html#=
MotifFinding.heuristicStochastic"><span class=3D"viewcode-link"><span class=
=3D"pre">[source]</span></span></a><a class=3D"headerlink" href=3D"http://l=
ocalhost:63342/AABB/Documentation/_build/html/package_aab.src.html#package_=
aab.src.MotifFinding.MotifFinding.heuristicStochastic" title=3D"Permalink t=
o this definition">=C2=B6</a></dt>
<dd><p>Method that computes the heuristic stochastic consensus algorithm, u=
sing the most likely segments to adjust
starting positions to achieve the best profile (motif)
:return: the vector of starting positions s (representative of the best mot=
if found)</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MotifFinding.MotifFin=
ding.nextSol">
<span class=3D"sig-name descname"><span class=3D"pre">nextSol</span></span>=
<span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n"=
><span class=3D"pre">s</span></span><span class=3D"p"><span class=3D"pre">:=
</span></span><span class=3D"w"> </span><span class=3D"n"><span class=3D"pr=
e">list</span></span></em><span class=3D"sig-paren">)</span> <span class=3D=
"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span class=
=3D"sig-return-typehint"><span class=3D"pre">list</span></span></span><a cl=
ass=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentatio=
n/_build/html/_modules/package_aab/src/MotifFinding.html#MotifFinding.nextS=
ol"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span=
></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentat=
ion/_build/html/package_aab.src.html#package_aab.src.MotifFinding.MotifFind=
ing.nextSol" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Auxiliary method (to exhaustiveSearch) that gives the next vector of=
 starting positions.
Method implemented to iterate over all the possible values of the motif pos=
ition in the entered sequence.
:param s: list of the motif indexes in the entered sequence.
:return: list of all the possible values of the position of the motif in th=
e entered sequence.</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MotifFinding.MotifFin=
ding.nextVertex">
<span class=3D"sig-name descname"><span class=3D"pre">nextVertex</span></sp=
an><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D=
"n"><span class=3D"pre">s</span></span><span class=3D"p"><span class=3D"pre=
">:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=3D=
"pre">list</span></span></em><span class=3D"sig-paren">)</span> <span class=
=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span clas=
s=3D"sig-return-typehint"><span class=3D"pre">list</span></span></span><a c=
lass=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentati=
on/_build/html/_modules/package_aab/src/MotifFinding.html#MotifFinding.next=
Vertex"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></=
span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Docume=
ntation/_build/html/package_aab.src.html#package_aab.src.MotifFinding.Motif=
Finding.nextVertex" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method implemented to find the next vertex.
:param s: list of indices of the motifs in the entered sequences.
:return: list of next vertices</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MotifFinding.MotifFin=
ding.readFile">
<span class=3D"sig-name descname"><span class=3D"pre">readFile</span></span=
><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n=
"><span class=3D"pre">file</span></span><span class=3D"p"><span class=3D"pr=
e">:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=
=3D"pre">str</span></span></em>, <em class=3D"sig-param"><span class=3D"n">=
<span class=3D"pre">type</span></span><span class=3D"p"><span class=3D"pre"=
>:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=3D"=
pre">str</span></span></em><span class=3D"sig-paren">)</span> <span class=
=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span clas=
s=3D"sig-return-typehint"><span class=3D"pre">None</span></span></span><a c=
lass=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentati=
on/_build/html/_modules/package_aab/src/MotifFinding.html#MotifFinding.read=
File"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></sp=
an></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Document=
ation/_build/html/package_aab.src.html#package_aab.src.MotifFinding.MotifFi=
nding.readFile" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that reads the sequence file.
param file: sequence file.
param type: type of the sequences.</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MotifFinding.MotifFin=
ding.roulette">
<span class=3D"sig-name descname"><span class=3D"pre">roulette</span></span=
><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n=
"><span class=3D"pre">f</span></span><span class=3D"p"><span class=3D"pre">=
:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=3D"p=
re">list</span></span></em><span class=3D"sig-paren">)</span> <span class=
=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span clas=
s=3D"sig-return-typehint"><span class=3D"pre">int</span></span></span><a cl=
ass=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentatio=
n/_build/html/_modules/package_aab/src/MotifFinding.html#MotifFinding.roule=
tte"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></spa=
n></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documenta=
tion/_build/html/package_aab.src.html#package_aab.src.MotifFinding.MotifFin=
ding.roulette" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method implemented to simulate examples of a roulette wheel.
:param f: list of positions
:return: chosen value</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MotifFinding.MotifFin=
ding.score">
<span class=3D"sig-name descname"><span class=3D"pre">score</span></span><s=
pan class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n"><=
span class=3D"pre">s</span></span><span class=3D"p"><span class=3D"pre">:</=
span></span><span class=3D"w"> </span><span class=3D"n"><span class=3D"pre"=
>list</span></span></em><span class=3D"sig-paren">)</span> <span class=3D"s=
ig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span class=3D"=
sig-return-typehint"><span class=3D"pre">int</span></span></span><a class=
=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentation/_=
build/html/_modules/package_aab/src/MotifFinding.html#MotifFinding.score"><=
span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a>=
<a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_=
build/html/package_aab.src.html#package_aab.src.MotifFinding.MotifFinding.s=
core" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method implemented for the scoring function.
The scoring function iterates over all motif positions and determines the m=
aximum
value of the motif score.
:param s: list of motif indices in the entered sequences.
:return: maximum score of the motif score.</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MotifFinding.MotifFin=
ding.scoreMult">
<span class=3D"sig-name descname"><span class=3D"pre">scoreMult</span></spa=
n><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"=
n"><span class=3D"pre">s</span></span></em><span class=3D"sig-paren">)</spa=
n><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docum=
entation/_build/html/_modules/package_aab/src/MotifFinding.html#MotifFindin=
g.scoreMult"><span class=3D"viewcode-link"><span class=3D"pre">[source]</sp=
an></span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/D=
ocumentation/_build/html/package_aab.src.html#package_aab.src.MotifFinding.=
MotifFinding.scoreMult" title=3D"Permalink to this definition">=C2=B6</a></=
dt>
<dd><p>Method implemented for the multiplication of the maximum motif score=
s.
The scoreMult() method provides a way to quantify the importance of each oc=
currence of a motif by calculating
the maximum score for each position in the motif, and then multiplying thes=
e scores together to get an overall
score.
:param s: list of the motif indexes in the introduced sequences.
:return: multiplication of maximum scores.</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MotifFinding.MotifFin=
ding.seqSize">
<span class=3D"sig-name descname"><span class=3D"pre">seqSize</span></span>=
<span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n"=
><span class=3D"pre">i</span></span><span class=3D"p"><span class=3D"pre">:=
</span></span><span class=3D"w"> </span><span class=3D"n"><span class=3D"pr=
e">int</span></span></em><span class=3D"sig-paren">)</span> <span class=3D"=
sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span class=3D=
"sig-return-typehint"><span class=3D"pre">int</span></span></span><a class=
=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentation/_=
build/html/_modules/package_aab/src/MotifFinding.html#MotifFinding.seqSize"=
><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></=
a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation=
/_build/html/package_aab.src.html#package_aab.src.MotifFinding.MotifFinding=
.seqSize" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that returns the length of the sequence.
:param i: index of the sequence in the sequence list.
:return: length of the sequence with index i from the sequence list.</p>
</dd></dl>

</dd></dl>

<dl class=3D"py function">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MotifFinding.random">
<span class=3D"sig-prename descclassname"><span class=3D"pre">package_aab.s=
rc.MotifFinding.</span></span><span class=3D"sig-name descname"><span class=
=3D"pre">random</span></span><span class=3D"sig-paren">(</span><span class=
=3D"sig-paren">)</span> <span class=3D"sig-return"><span class=3D"sig-retur=
n-icon">=E2=86=92</span> <span class=3D"sig-return-typehint"><span class=3D=
"pre">x</span> <span class=3D"pre">in</span> <span class=3D"pre">the</span>=
 <span class=3D"pre">interval</span> <span class=3D"pre">[0,</span> <span c=
lass=3D"pre">1).</span></span></span><a class=3D"headerlink" href=3D"http:/=
/localhost:63342/AABB/Documentation/_build/html/package_aab.src.html#packag=
e_aab.src.MotifFinding.random" title=3D"Permalink to this definition">=C2=
=B6</a></dt>
<dd></dd></dl>

</section>
<section id=3D"module-package_aab.src.MyMotifs">
<span id=3D"package-aab-src-mymotifs-module"></span><h2>package_aab.src.MyM=
otifs module<a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Doc=
umentation/_build/html/package_aab.src.html#module-package_aab.src.MyMotifs=
" title=3D"Permalink to this heading">=C2=B6</a></h2>
<p>Class: MyMotifs</p>
<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MyMotifs.MyMotifs">
<em class=3D"property"><span class=3D"pre">class</span><span class=3D"w"> <=
/span></em><span class=3D"sig-prename descclassname"><span class=3D"pre">pa=
ckage_aab.src.MyMotifs.</span></span><span class=3D"sig-name descname"><spa=
n class=3D"pre">MyMotifs</span></span><span class=3D"sig-paren">(</span><em=
 class=3D"sig-param"><span class=3D"n"><span class=3D"pre">lseqs</span></sp=
an><span class=3D"p"><span class=3D"pre">:</span></span><span class=3D"w"> =
</span><span class=3D"n"><span class=3D"pre">list</span></span><span class=
=3D"w"> </span><span class=3D"o"><span class=3D"pre">=3D</span></span><span=
 class=3D"w"> </span><span class=3D"default_value"><span class=3D"pre">[]</=
span></span></em>, <em class=3D"sig-param"><span class=3D"n"><span class=3D=
"pre">pwm</span></span><span class=3D"p"><span class=3D"pre">:</span></span=
><span class=3D"w"> </span><span class=3D"n"><span class=3D"pre">list</span=
></span><span class=3D"w"> </span><span class=3D"o"><span class=3D"pre">=3D=
</span></span><span class=3D"w"> </span><span class=3D"default_value"><span=
 class=3D"pre">[]</span></span></em>, <em class=3D"sig-param"><span class=
=3D"n"><span class=3D"pre">alphabet</span></span><span class=3D"p"><span cl=
ass=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><spa=
n class=3D"pre">Optional</span><span class=3D"p"><span class=3D"pre">[</spa=
n></span><span class=3D"pre">str</span><span class=3D"p"><span class=3D"pre=
">]</span></span></span><span class=3D"w"> </span><span class=3D"o"><span c=
lass=3D"pre">=3D</span></span><span class=3D"w"> </span><span class=3D"defa=
ult_value"><span class=3D"pre">None</span></span></em><span class=3D"sig-pa=
ren">)</span><a class=3D"reference internal" href=3D"http://localhost:63342=
/AABB/Documentation/_build/html/_modules/package_aab/src/MyMotifs.html#MyMo=
tifs"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></sp=
an></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Document=
ation/_build/html/package_aab.src.html#package_aab.src.MyMotifs.MyMotifs" t=
itle=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Bases: <code class=3D"xref py py-class docutils literal notranslate"=
><span class=3D"pre">object</span></code></p>
<p>Class that presents the methods that allow the manipulation and search o=
f recurring patterns (motifis)
in biology sequences and do PWM.</p>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MyMotifs.MyMotifs.con=
sensus">
<span class=3D"sig-name descname"><span class=3D"pre">consensus</span></spa=
n><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span> <spa=
n class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <sp=
an class=3D"sig-return-typehint"><span class=3D"pre">str</span></span></spa=
n><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docum=
entation/_build/html/_modules/package_aab/src/MyMotifs.html#MyMotifs.consen=
sus"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></spa=
n></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documenta=
tion/_build/html/package_aab.src.html#package_aab.src.MyMotifs.MyMotifs.con=
sensus" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that generates a consensus sequence. Consensus sequences stor=
e the most conserved characters in each
position of the pattern, that is, the highest value of each column of the c=
ount matrix.
:return: string of the consensus sequence.</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MyMotifs.MyMotifs.cre=
atePWM">
<span class=3D"sig-name descname"><span class=3D"pre">createPWM</span></spa=
n><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span> <spa=
n class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <sp=
an class=3D"sig-return-typehint"><span class=3D"pre">None</span></span></sp=
an><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docu=
mentation/_build/html/_modules/package_aab/src/MyMotifs.html#MyMotifs.creat=
ePWM"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></sp=
an></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Document=
ation/_build/html/package_aab.src.html#package_aab.src.MyMotifs.MyMotifs.cr=
eatePWM" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that creates the probabilistic matrix. PWMs are probabilistic=
 representations of the characters
in biological sequences. It calculates the probability of nucleotide i bein=
g found at position j.</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MyMotifs.MyMotifs.doC=
ounts">
<span class=3D"sig-name descname"><span class=3D"pre">doCounts</span></span=
><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><a cla=
ss=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentation=
/_build/html/_modules/package_aab/src/MyMotifs.html#MyMotifs.doCounts"><spa=
n class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a =
class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_bui=
ld/html/package_aab.src.html#package_aab.src.MyMotifs.MyMotifs.doCounts" ti=
tle=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that implements the counting matrices.</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MyMotifs.MyMotifs.mas=
kedConsensus">
<span class=3D"sig-name descname"><span class=3D"pre">maskedConsensus</span=
></span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span=
> <span class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</spa=
n> <span class=3D"sig-return-typehint"><span class=3D"pre">str</span></span=
></span><a class=3D"reference internal" href=3D"http://localhost:63342/AABB=
/Documentation/_build/html/_modules/package_aab/src/MyMotifs.html#MyMotifs.=
maskedConsensus"><span class=3D"viewcode-link"><span class=3D"pre">[source]=
</span></span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AA=
BB/Documentation/_build/html/package_aab.src.html#package_aab.src.MyMotifs.=
MyMotifs.maskedConsensus" title=3D"Permalink to this definition">=C2=B6</a>=
</dt>
<dd><p>Method that generates the consensus sequence that is obtained with t=
he characters
that have an incidence higher than 50%.
:return: string of the consensus sequence with incidence higher than 50%.</=
p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MyMotifs.MyMotifs.mos=
tProbableSeq">
<span class=3D"sig-name descname"><span class=3D"pre">mostProbableSeq</span=
></span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span cla=
ss=3D"n"><span class=3D"pre">seq</span></span><span class=3D"p"><span class=
=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><span c=
lass=3D"pre">str</span></span></em><span class=3D"sig-paren">)</span> <span=
 class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <spa=
n class=3D"sig-return-typehint"><span class=3D"pre">int</span></span></span=
><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docume=
ntation/_build/html/_modules/package_aab/src/MyMotifs.html#MyMotifs.mostPro=
bableSeq"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span>=
</span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Docu=
mentation/_build/html/package_aab.src.html#package_aab.src.MyMotifs.MyMotif=
s.mostProbableSeq" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method implemented to determine the sub-sequence with the highest pr=
obability of matching
the pattern being searched.
:param seq: sequence introduced
return: the index of the sub-sequence with higher probability of matching t=
he pattern in search.</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MyMotifs.MyMotifs.pro=
bAllPositions">
<span class=3D"sig-name descname"><span class=3D"pre">probAllPositions</spa=
n></span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span cl=
ass=3D"n"><span class=3D"pre">seq</span></span><span class=3D"p"><span clas=
s=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><span =
class=3D"pre">str</span></span></em><span class=3D"sig-paren">)</span> <spa=
n class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <sp=
an class=3D"sig-return-typehint"><span class=3D"pre">list</span></span></sp=
an><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docu=
mentation/_build/html/_modules/package_aab/src/MyMotifs.html#MyMotifs.probA=
llPositions"><span class=3D"viewcode-link"><span class=3D"pre">[source]</sp=
an></span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/D=
ocumentation/_build/html/package_aab.src.html#package_aab.src.MyMotifs.MyMo=
tifs.probAllPositions" title=3D"Permalink to this definition">=C2=B6</a></d=
t>
<dd><p>Method implemented to calculate the probability of finding patterns =
in longer sequences
and calculate the probability of the pattern occurring at each character in=
 the sequence, ie,
of occurring at each sub-sequence of the pattern size. For example, if the =
pattern size is 3 and the sequence is
=E2=80=9CATCGTACG=E2=80=9D, the method would calculate the probability of t=
he pattern occurring at each of the sub-sequences of
size 3, which are =E2=80=9CATC=E2=80=9D, =E2=80=9CTCG=E2=80=9D, =E2=80=9CCG=
T=E2=80=9D, =E2=80=9CGTA=E2=80=9D, =E2=80=9CTAC=E2=80=9D, =E2=80=9CACG=E2=
=80=9D.
:param seq: sequence introduced
:return: list of probabilities of the pattern occurring at each subsequence=
</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MyMotifs.MyMotifs.pro=
babSeq">
<span class=3D"sig-name descname"><span class=3D"pre">probabSeq</span></spa=
n><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"=
n"><span class=3D"pre">seq</span></span><span class=3D"p"><span class=3D"pr=
e">:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=
=3D"pre">str</span></span></em><span class=3D"sig-paren">)</span> <span cla=
ss=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span cl=
ass=3D"sig-return-typehint"><span class=3D"pre">float</span></span></span><=
a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Document=
ation/_build/html/_modules/package_aab/src/MyMotifs.html#MyMotifs.probabSeq=
"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span><=
/a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentatio=
n/_build/html/package_aab.src.html#package_aab.src.MyMotifs.MyMotifs.probab=
Seq" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that calculates the probability of a pattern being found in a=
 sequence.
:param seq: sequence intoduced
:return: the probability of a pattern being found in the sequence</p>
</dd></dl>

</dd></dl>

<dl class=3D"py function">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MyMotifs.createMatZer=
os">
<span class=3D"sig-prename descclassname"><span class=3D"pre">package_aab.s=
rc.MyMotifs.</span></span><span class=3D"sig-name descname"><span class=3D"=
pre">createMatZeros</span></span><span class=3D"sig-paren">(</span><em clas=
s=3D"sig-param"><span class=3D"n"><span class=3D"pre">line_num</span></span=
><span class=3D"p"><span class=3D"pre">:</span></span><span class=3D"w"> </=
span><span class=3D"n"><span class=3D"pre">int</span></span></em>, <em clas=
s=3D"sig-param"><span class=3D"n"><span class=3D"pre">col_num</span></span>=
<span class=3D"p"><span class=3D"pre">:</span></span><span class=3D"w"> </s=
pan><span class=3D"n"><span class=3D"pre">int</span></span></em><span class=
=3D"sig-paren">)</span> <span class=3D"sig-return"><span class=3D"sig-retur=
n-icon">=E2=86=92</span> <span class=3D"sig-return-typehint"><span class=3D=
"pre">list</span></span></span><a class=3D"reference internal" href=3D"http=
://localhost:63342/AABB/Documentation/_build/html/_modules/package_aab/src/=
MyMotifs.html#createMatZeros"><span class=3D"viewcode-link"><span class=3D"=
pre">[source]</span></span></a><a class=3D"headerlink" href=3D"http://local=
host:63342/AABB/Documentation/_build/html/package_aab.src.html#package_aab.=
src.MyMotifs.createMatZeros" title=3D"Permalink to this definition">=C2=B6<=
/a></dt>
<dd><p>Method that creates the matrix of zeros.
The matrix of zeros is used as a base to store the counts or probabilities
of each character in each position of the biological sequences that
are being analyzed.
:param line_num: number of lines in the matrix
:param col_num: number of columns in the matrix
:return: matrix of zeros</p>
</dd></dl>

<dl class=3D"py function">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MyMotifs.printMat">
<span class=3D"sig-prename descclassname"><span class=3D"pre">package_aab.s=
rc.MyMotifs.</span></span><span class=3D"sig-name descname"><span class=3D"=
pre">printMat</span></span><span class=3D"sig-paren">(</span><em class=3D"s=
ig-param"><span class=3D"n"><span class=3D"pre">mat</span></span><span clas=
s=3D"p"><span class=3D"pre">:</span></span><span class=3D"w"> </span><span =
class=3D"n"><span class=3D"pre">list</span></span></em><span class=3D"sig-p=
aren">)</span><a class=3D"reference internal" href=3D"http://localhost:6334=
2/AABB/Documentation/_build/html/_modules/package_aab/src/MyMotifs.html#pri=
ntMat"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></s=
pan></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documen=
tation/_build/html/package_aab.src.html#package_aab.src.MyMotifs.printMat" =
title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method to print the matrix
:param mat: matrix to print</p>
</dd></dl>

</section>
<section id=3D"module-package_aab.src.MySeq">
<span id=3D"package-aab-src-myseq-module"></span><h2>package_aab.src.MySeq =
module<a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documenta=
tion/_build/html/package_aab.src.html#module-package_aab.src.MySeq" title=
=3D"Permalink to this heading">=C2=B6</a></h2>
<p>Class:MySeq</p>
<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MySeq.MySeq">
<em class=3D"property"><span class=3D"pre">class</span><span class=3D"w"> <=
/span></em><span class=3D"sig-prename descclassname"><span class=3D"pre">pa=
ckage_aab.src.MySeq.</span></span><span class=3D"sig-name descname"><span c=
lass=3D"pre">MySeq</span></span><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n"><span class=3D"pre">seq</span></span><span=
 class=3D"p"><span class=3D"pre">:</span></span><span class=3D"w"> </span><=
span class=3D"n"><span class=3D"pre">str</span></span></em>, <em class=3D"s=
ig-param"><span class=3D"n"><span class=3D"pre">seq_type</span></span><span=
 class=3D"p"><span class=3D"pre">:</span></span><span class=3D"w"> </span><=
span class=3D"n"><span class=3D"pre">str</span></span></em><span class=3D"s=
ig-paren">)</span><a class=3D"reference internal" href=3D"http://localhost:=
63342/AABB/Documentation/_build/html/_modules/package_aab/src/MySeq.html#My=
Seq"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></spa=
n></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documenta=
tion/_build/html/package_aab.src.html#package_aab.src.MySeq.MySeq" title=3D=
"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Bases: <code class=3D"xref py py-class docutils literal notranslate"=
><span class=3D"pre">object</span></code></p>
<p>Class presenting the methods that allow the manipulation of DNA, RNA and=
 protein sequences.</p>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MySeq.MySeq.allProtei=
n">
<span class=3D"sig-name descname"><span class=3D"pre">allProtein</span></sp=
an><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><a c=
lass=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentati=
on/_build/html/_modules/package_aab/src/MySeq.html#MySeq.allProtein"><span =
class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a cl=
ass=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_build=
/html/package_aab.src.html#package_aab.src.MySeq.MySeq.allProtein" title=3D=
"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that constructs of a list with all the existing and possible =
proteins in the sequence. The sequence can be proteic or DNA
Only executes in case the object is a DNA or AMINO sequence
:return: DNA or amino sequence</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MySeq.MySeq.alphabet"=
>
<span class=3D"sig-name descname"><span class=3D"pre">alphabet</span></span=
><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><a cla=
ss=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentation=
/_build/html/_modules/package_aab/src/MySeq.html#MySeq.alphabet"><span clas=
s=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a class=
=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_build/ht=
ml/package_aab.src.html#package_aab.src.MySeq.MySeq.alphabet" title=3D"Perm=
alink to this definition">=C2=B6</a></dt>
<dd><p>Method that verifies the type of sequence
:return: returns the possible caracters of the sequence.</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MySeq.MySeq.codonTran=
slate">
<span class=3D"sig-name descname"><span class=3D"pre">codonTranslate</span>=
</span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span clas=
s=3D"n"><span class=3D"pre">cod</span></span><span class=3D"p"><span class=
=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><span c=
lass=3D"pre">str</span></span></em><span class=3D"sig-paren">)</span> <span=
 class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <spa=
n class=3D"sig-return-typehint"><span class=3D"pre">str</span></span></span=
><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docume=
ntation/_build/html/_modules/package_aab/src/MySeq.html#MySeq.codonTranslat=
e"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span>=
</a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentati=
on/_build/html/package_aab.src.html#package_aab.src.MySeq.MySeq.codonTransl=
ate" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>M=C3=A9todo que traduz os cod=C3=B5es nos respetivos amino=C3=A1cido=
s.
:param cod: cod=C3=A3o a procurar na tabela de cod=C3=B5es
:return: sequ=C3=AAncia de amino=C3=A1cidos</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MySeq.MySeq.largestOr=
fProtein">
<span class=3D"sig-name descname"><span class=3D"pre">largestOrfProtein</sp=
an></span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</sp=
an><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docu=
mentation/_build/html/_modules/package_aab/src/MySeq.html#MySeq.largestOrfP=
rotein"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></=
span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Docume=
ntation/_build/html/package_aab.src.html#package_aab.src.MySeq.MySeq.larges=
tOrfProtein" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method to get the bigger protein in the sequence
:return: string with the bigger protein</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MySeq.MySeq.longestPr=
oteinSeq">
<span class=3D"sig-name descname"><span class=3D"pre">longestProteinSeq</sp=
an></span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</sp=
an><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docu=
mentation/_build/html/_modules/package_aab/src/MySeq.html#MySeq.longestProt=
einSeq"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></=
span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Docume=
ntation/_build/html/package_aab.src.html#package_aab.src.MySeq.MySeq.longes=
tProteinSeq" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>M=C3=A9todo que procura a sequ=C3=AAncia prote=C3=ADca mais comprida=
.
:return: maior sequ=C3=AAncia prote=C3=ADca.</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MySeq.MySeq.orfs">
<span class=3D"sig-name descname"><span class=3D"pre">orfs</span></span><sp=
an class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><a class=
=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentation/_=
build/html/_modules/package_aab/src/MySeq.html#MySeq.orfs"><span class=3D"v=
iewcode-link"><span class=3D"pre">[source]</span></span></a><a class=3D"hea=
derlink" href=3D"http://localhost:63342/AABB/Documentation/_build/html/pack=
age_aab.src.html#package_aab.src.MySeq.MySeq.orfs" title=3D"Permalink to th=
is definition">=C2=B6</a></dt>
<dd><p>M=C3=A9todo que determina as open reading frames (ORF), i.e, as sequ=
=C3=AAncias compreendidas entre o cod=C3=A3o de inicia=C3=A7=C3=A3o
e o cod=C3=A3o STOP. Gera seis reading frames da sequ=C3=AAncia de DNA e do=
 complemento inverso.
:return: devolve as ORF=E2=80=99s</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MySeq.MySeq.printSeq"=
>
<span class=3D"sig-name descname"><span class=3D"pre">printSeq</span></span=
><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><a cla=
ss=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentation=
/_build/html/_modules/package_aab/src/MySeq.html#MySeq.printSeq"><span clas=
s=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a class=
=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_build/ht=
ml/package_aab.src.html#package_aab.src.MySeq.MySeq.printSeq" title=3D"Perm=
alink to this definition">=C2=B6</a></dt>
<dd><p>Method that prints the complete sequence
:return: string of the complete sequence</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MySeq.MySeq.reverseCo=
mplement">
<span class=3D"sig-name descname"><span class=3D"pre">reverseComplement</sp=
an></span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</sp=
an><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docu=
mentation/_build/html/_modules/package_aab/src/MySeq.html#MySeq.reverseComp=
lement"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></=
span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Docume=
ntation/_build/html/package_aab.src.html#package_aab.src.MySeq.MySeq.revers=
eComplement" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that inverts and complements the sequence
Only executes in case the object is a DNA sequence
:return: DNA sequence</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MySeq.MySeq.rnaCodon"=
>
<span class=3D"sig-name descname"><span class=3D"pre">rnaCodon</span></span=
><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span> <span=
 class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <spa=
n class=3D"sig-return-typehint"><span class=3D"pre">list</span></span></spa=
n><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docum=
entation/_build/html/_modules/package_aab/src/MySeq.html#MySeq.rnaCodon"><s=
pan class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><=
a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_b=
uild/html/package_aab.src.html#package_aab.src.MySeq.MySeq.rnaCodon" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that searches for the codons in the sequence.
:returns: list of codons</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MySeq.MySeq.seqTransl=
ation">
<span class=3D"sig-name descname"><span class=3D"pre">seqTranslation</span>=
</span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span clas=
s=3D"n"><span class=3D"pre">initial_pos</span></span><span class=3D"p"><spa=
n class=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n">=
<span class=3D"pre">int</span></span><span class=3D"w"> </span><span class=
=3D"o"><span class=3D"pre">=3D</span></span><span class=3D"w"> </span><span=
 class=3D"default_value"><span class=3D"pre">0</span></span></em><span clas=
s=3D"sig-paren">)</span><a class=3D"reference internal" href=3D"http://loca=
lhost:63342/AABB/Documentation/_build/html/_modules/package_aab/src/MySeq.h=
tml#MySeq.seqTranslation"><span class=3D"viewcode-link"><span class=3D"pre"=
>[source]</span></span></a><a class=3D"headerlink" href=3D"http://localhost=
:63342/AABB/Documentation/_build/html/package_aab.src.html#package_aab.src.=
MySeq.MySeq.seqTranslation" title=3D"Permalink to this definition">=C2=B6</=
a></dt>
<dd><p>Method that performs the translation of the sequence
:param initial_pos: determines the initial position of the reading sequence
:return:</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MySeq.MySeq.transcrip=
tion">
<span class=3D"sig-name descname"><span class=3D"pre">transcription</span><=
/span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><=
a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Document=
ation/_build/html/_modules/package_aab/src/MySeq.html#MySeq.transcription">=
<span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a=
><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/=
_build/html/package_aab.src.html#package_aab.src.MySeq.MySeq.transcription"=
 title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that returns the transcript sequence. Replacing of the thymin=
e base =E2=80=98T=E2=80=99 for the uracil base =E2=80=98U=E2=80=99
Only executes in case the object is a DNA sequence
:return: RNA sequence</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.MySeq.MySeq.validateS=
eqRE">
<span class=3D"sig-name descname"><span class=3D"pre">validateSeqRE</span><=
/span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span> =
<span class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span>=
 <span class=3D"sig-return-typehint"><span class=3D"pre">bool</span></span>=
</span><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/=
Documentation/_build/html/_modules/package_aab/src/MySeq.html#MySeq.validat=
eSeqRE"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></=
span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Docume=
ntation/_build/html/package_aab.src.html#package_aab.src.MySeq.MySeq.valida=
teSeqRE" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that validates the sequence according to the type of characte=
rs present through regular expressions.
:return: value True or False if the sequences are valid or invalid, respect=
ively</p>
</dd></dl>

</dd></dl>

</section>
<section id=3D"module-package_aab.src.Popul">
<span id=3D"package-aab-src-popul-module"></span><h2>package_aab.src.Popul =
module<a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documenta=
tion/_build/html/package_aab.src.html#module-package_aab.src.Popul" title=
=3D"Permalink to this heading">=C2=B6</a></h2>
<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Popul.Popul">
<em class=3D"property"><span class=3D"pre">class</span><span class=3D"w"> <=
/span></em><span class=3D"sig-prename descclassname"><span class=3D"pre">pa=
ckage_aab.src.Popul.</span></span><span class=3D"sig-name descname"><span c=
lass=3D"pre">Popul</span></span><span class=3D"sig-paren">(</span><em class=
=3D"sig-param"><span class=3D"n"><span class=3D"pre">popsize</span></span><=
/em>, <em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">indsize=
</span></span></em>, <em class=3D"sig-param"><span class=3D"n"><span class=
=3D"pre">indivs</span></span><span class=3D"o"><span class=3D"pre">=3D</spa=
n></span><span class=3D"default_value"><span class=3D"pre">[]</span></span>=
</em><span class=3D"sig-paren">)</span><a class=3D"reference internal" href=
=3D"http://localhost:63342/AABB/Documentation/_build/html/_modules/package_=
aab/src/Popul.html#Popul"><span class=3D"viewcode-link"><span class=3D"pre"=
>[source]</span></span></a><a class=3D"headerlink" href=3D"http://localhost=
:63342/AABB/Documentation/_build/html/package_aab.src.html#package_aab.src.=
Popul.Popul" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Bases: <code class=3D"xref py py-class docutils literal notranslate"=
><span class=3D"pre">object</span></code></p>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Popul.Popul.bestFitne=
ss">
<span class=3D"sig-name descname"><span class=3D"pre">bestFitness</span></s=
pan><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><a =
class=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentat=
ion/_build/html/_modules/package_aab/src/Popul.html#Popul.bestFitness"><spa=
n class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a =
class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_bui=
ld/html/package_aab.src.html#package_aab.src.Popul.Popul.bestFitness" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Popul.Popul.bestSolut=
ion">
<span class=3D"sig-name descname"><span class=3D"pre">bestSolution</span></=
span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><a=
 class=3D"reference internal" href=3D"http://localhost:63342/AABB/Documenta=
tion/_build/html/_modules/package_aab/src/Popul.html#Popul.bestSolution"><s=
pan class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><=
a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_b=
uild/html/package_aab.src.html#package_aab.src.Popul.Popul.bestSolution" ti=
tle=3D"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Popul.Popul.getFitnes=
ses">
<span class=3D"sig-name descname"><span class=3D"pre">getFitnesses</span></=
span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=
=3D"n"><span class=3D"pre">indivs</span></span><span class=3D"o"><span clas=
s=3D"pre">=3D</span></span><span class=3D"default_value"><span class=3D"pre=
">None</span></span></em><span class=3D"sig-paren">)</span><a class=3D"refe=
rence internal" href=3D"http://localhost:63342/AABB/Documentation/_build/ht=
ml/_modules/package_aab/src/Popul.html#Popul.getFitnesses"><span class=3D"v=
iewcode-link"><span class=3D"pre">[source]</span></span></a><a class=3D"hea=
derlink" href=3D"http://localhost:63342/AABB/Documentation/_build/html/pack=
age_aab.src.html#package_aab.src.Popul.Popul.getFitnesses" title=3D"Permali=
nk to this definition">=C2=B6</a></dt>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Popul.Popul.getIndiv"=
>
<span class=3D"sig-name descname"><span class=3D"pre">getIndiv</span></span=
><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n=
"><span class=3D"pre">index</span></span></em><span class=3D"sig-paren">)</=
span><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Do=
cumentation/_build/html/_modules/package_aab/src/Popul.html#Popul.getIndiv"=
><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></=
a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation=
/_build/html/package_aab.src.html#package_aab.src.Popul.Popul.getIndiv" tit=
le=3D"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Popul.Popul.initRando=
mPop">
<span class=3D"sig-name descname"><span class=3D"pre">initRandomPop</span><=
/span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><=
a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Document=
ation/_build/html/_modules/package_aab/src/Popul.html#Popul.initRandomPop">=
<span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a=
><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/=
_build/html/package_aab.src.html#package_aab.src.Popul.Popul.initRandomPop"=
 title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Popul.Popul.linscalin=
g">
<span class=3D"sig-name descname"><span class=3D"pre">linscaling</span></sp=
an><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D=
"n"><span class=3D"pre">fitnesses</span></span></em><span class=3D"sig-pare=
n">)</span><a class=3D"reference internal" href=3D"http://localhost:63342/A=
ABB/Documentation/_build/html/_modules/package_aab/src/Popul.html#Popul.lin=
scaling"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span><=
/span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Docum=
entation/_build/html/package_aab.src.html#package_aab.src.Popul.Popul.linsc=
aling" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Popul.Popul.recombina=
tion">
<span class=3D"sig-name descname"><span class=3D"pre">recombination</span><=
/span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=
=3D"n"><span class=3D"pre">parents</span></span></em>, <em class=3D"sig-par=
am"><span class=3D"n"><span class=3D"pre">noffspring</span></span></em><spa=
n class=3D"sig-paren">)</span><a class=3D"reference internal" href=3D"http:=
//localhost:63342/AABB/Documentation/_build/html/_modules/package_aab/src/P=
opul.html#Popul.recombination"><span class=3D"viewcode-link"><span class=3D=
"pre">[source]</span></span></a><a class=3D"headerlink" href=3D"http://loca=
lhost:63342/AABB/Documentation/_build/html/package_aab.src.html#package_aab=
.src.Popul.Popul.recombination" title=3D"Permalink to this definition">=C2=
=B6</a></dt>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Popul.Popul.reinserti=
on">
<span class=3D"sig-name descname"><span class=3D"pre">reinsertion</span></s=
pan><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=
=3D"n"><span class=3D"pre">offspring</span></span></em><span class=3D"sig-p=
aren">)</span><a class=3D"reference internal" href=3D"http://localhost:6334=
2/AABB/Documentation/_build/html/_modules/package_aab/src/Popul.html#Popul.=
reinsertion"><span class=3D"viewcode-link"><span class=3D"pre">[source]</sp=
an></span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/D=
ocumentation/_build/html/package_aab.src.html#package_aab.src.Popul.Popul.r=
einsertion" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Popul.Popul.roulette"=
>
<span class=3D"sig-name descname"><span class=3D"pre">roulette</span></span=
><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n=
"><span class=3D"pre">f</span></span></em><span class=3D"sig-paren">)</span=
><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docume=
ntation/_build/html/_modules/package_aab/src/Popul.html#Popul.roulette"><sp=
an class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a=
 class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_bu=
ild/html/package_aab.src.html#package_aab.src.Popul.Popul.roulette" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Popul.Popul.selection=
">
<span class=3D"sig-name descname"><span class=3D"pre">selection</span></spa=
n><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"=
n"><span class=3D"pre">n</span></span></em>, <em class=3D"sig-param"><span =
class=3D"n"><span class=3D"pre">indivs</span></span><span class=3D"o"><span=
 class=3D"pre">=3D</span></span><span class=3D"default_value"><span class=
=3D"pre">None</span></span></em><span class=3D"sig-paren">)</span><a class=
=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentation/_=
build/html/_modules/package_aab/src/Popul.html#Popul.selection"><span class=
=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a class=
=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_build/ht=
ml/package_aab.src.html#package_aab.src.Popul.Popul.selection" title=3D"Per=
malink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

</dd></dl>

<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Popul.PopulInt">
<em class=3D"property"><span class=3D"pre">class</span><span class=3D"w"> <=
/span></em><span class=3D"sig-prename descclassname"><span class=3D"pre">pa=
ckage_aab.src.Popul.</span></span><span class=3D"sig-name descname"><span c=
lass=3D"pre">PopulInt</span></span><span class=3D"sig-paren">(</span><em cl=
ass=3D"sig-param"><span class=3D"n"><span class=3D"pre">popsize</span></spa=
n></em>, <em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">inds=
ize</span></span></em>, <em class=3D"sig-param"><span class=3D"n"><span cla=
ss=3D"pre">ub</span></span></em>, <em class=3D"sig-param"><span class=3D"n"=
><span class=3D"pre">indivs</span></span><span class=3D"o"><span class=3D"p=
re">=3D</span></span><span class=3D"default_value"><span class=3D"pre">[]</=
span></span></em><span class=3D"sig-paren">)</span><a class=3D"reference in=
ternal" href=3D"http://localhost:63342/AABB/Documentation/_build/html/_modu=
les/package_aab/src/Popul.html#PopulInt"><span class=3D"viewcode-link"><spa=
n class=3D"pre">[source]</span></span></a><a class=3D"headerlink" href=3D"h=
ttp://localhost:63342/AABB/Documentation/_build/html/package_aab.src.html#p=
ackage_aab.src.Popul.PopulInt" title=3D"Permalink to this definition">=C2=
=B6</a></dt>
<dd><p>Bases: <a class=3D"reference internal" href=3D"http://localhost:6334=
2/AABB/Documentation/_build/html/package_aab.src.html#package_aab.src.Popul=
.Popul" title=3D"package_aab.src.Popul.Popul"><code class=3D"xref py py-cla=
ss docutils literal notranslate"><span class=3D"pre">Popul</span></code></a=
></p>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Popul.PopulInt.initRa=
ndomPop">
<span class=3D"sig-name descname"><span class=3D"pre">initRandomPop</span><=
/span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><=
a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Document=
ation/_build/html/_modules/package_aab/src/Popul.html#PopulInt.initRandomPo=
p"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span>=
</a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentati=
on/_build/html/package_aab.src.html#package_aab.src.Popul.PopulInt.initRand=
omPop" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

</dd></dl>

<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Popul.PopulReal">
<em class=3D"property"><span class=3D"pre">class</span><span class=3D"w"> <=
/span></em><span class=3D"sig-prename descclassname"><span class=3D"pre">pa=
ckage_aab.src.Popul.</span></span><span class=3D"sig-name descname"><span c=
lass=3D"pre">PopulReal</span></span><span class=3D"sig-paren">(</span><em c=
lass=3D"sig-param"><span class=3D"n"><span class=3D"pre">popsize</span></sp=
an><span class=3D"p"><span class=3D"pre">:</span></span><span class=3D"w"> =
</span><span class=3D"n"><span class=3D"pre">int</span></span></em>, <em cl=
ass=3D"sig-param"><span class=3D"n"><span class=3D"pre">indsize</span></spa=
n><span class=3D"p"><span class=3D"pre">:</span></span><span class=3D"w"> <=
/span><span class=3D"n"><span class=3D"pre">int</span></span></em>, <em cla=
ss=3D"sig-param"><span class=3D"n"><span class=3D"pre">lb</span></span><spa=
n class=3D"p"><span class=3D"pre">:</span></span><span class=3D"w"> </span>=
<span class=3D"n"><span class=3D"pre">float</span></span><span class=3D"w">=
 </span><span class=3D"o"><span class=3D"pre">=3D</span></span><span class=
=3D"w"> </span><span class=3D"default_value"><span class=3D"pre">0.0</span>=
</span></em>, <em class=3D"sig-param"><span class=3D"n"><span class=3D"pre"=
>ub</span></span><span class=3D"p"><span class=3D"pre">:</span></span><span=
 class=3D"w"> </span><span class=3D"n"><span class=3D"pre">float</span></sp=
an><span class=3D"w"> </span><span class=3D"o"><span class=3D"pre">=3D</spa=
n></span><span class=3D"w"> </span><span class=3D"default_value"><span clas=
s=3D"pre">1.0</span></span></em>, <em class=3D"sig-param"><span class=3D"n"=
><span class=3D"pre">indivs</span></span><span class=3D"p"><span class=3D"p=
re">:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=
=3D"pre">list</span></span><span class=3D"w"> </span><span class=3D"o"><spa=
n class=3D"pre">=3D</span></span><span class=3D"w"> </span><span class=3D"d=
efault_value"><span class=3D"pre">[]</span></span></em><span class=3D"sig-p=
aren">)</span><a class=3D"reference internal" href=3D"http://localhost:6334=
2/AABB/Documentation/_build/html/_modules/package_aab/src/Popul.html#PopulR=
eal"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></spa=
n></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documenta=
tion/_build/html/package_aab.src.html#package_aab.src.Popul.PopulReal" titl=
e=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Bases: <a class=3D"reference internal" href=3D"http://localhost:6334=
2/AABB/Documentation/_build/html/package_aab.src.html#package_aab.src.Popul=
.Popul" title=3D"package_aab.src.Popul.Popul"><code class=3D"xref py py-cla=
ss docutils literal notranslate"><span class=3D"pre">Popul</span></code></a=
></p>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Popul.PopulReal.initR=
andomPop">
<span class=3D"sig-name descname"><span class=3D"pre">initRandomPop</span><=
/span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span> =
<span class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span>=
 <span class=3D"sig-return-typehint"><span class=3D"pre">None</span></span>=
</span><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/=
Documentation/_build/html/_modules/package_aab/src/Popul.html#PopulReal.ini=
tRandomPop"><span class=3D"viewcode-link"><span class=3D"pre">[source]</spa=
n></span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Do=
cumentation/_build/html/package_aab.src.html#package_aab.src.Popul.PopulRea=
l.initRandomPop" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that initializes the population (creates instances of IndivRe=
al class)
:return:</p>
</dd></dl>

</dd></dl>

<dl class=3D"py function">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Popul.random">
<span class=3D"sig-prename descclassname"><span class=3D"pre">package_aab.s=
rc.Popul.</span></span><span class=3D"sig-name descname"><span class=3D"pre=
">random</span></span><span class=3D"sig-paren">(</span><span class=3D"sig-=
paren">)</span> <span class=3D"sig-return"><span class=3D"sig-return-icon">=
=E2=86=92</span> <span class=3D"sig-return-typehint"><span class=3D"pre">x<=
/span> <span class=3D"pre">in</span> <span class=3D"pre">the</span> <span c=
lass=3D"pre">interval</span> <span class=3D"pre">[0,</span> <span class=3D"=
pre">1).</span></span></span><a class=3D"headerlink" href=3D"http://localho=
st:63342/AABB/Documentation/_build/html/package_aab.src.html#package_aab.sr=
c.Popul.random" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd></dd></dl>

</section>
<section id=3D"module-package_aab.src.SuffixTree">
<span id=3D"package-aab-src-suffixtree-module"></span><h2>package_aab.src.S=
uffixTree module<a class=3D"headerlink" href=3D"http://localhost:63342/AABB=
/Documentation/_build/html/package_aab.src.html#module-package_aab.src.Suff=
ixTree" title=3D"Permalink to this heading">=C2=B6</a></h2>
<p>Class: SuffixTree - Trie of sufixes</p>
<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.SuffixTree.SuffixTree=
">
<em class=3D"property"><span class=3D"pre">class</span><span class=3D"w"> <=
/span></em><span class=3D"sig-prename descclassname"><span class=3D"pre">pa=
ckage_aab.src.SuffixTree.</span></span><span class=3D"sig-name descname"><s=
pan class=3D"pre">SuffixTree</span></span><a class=3D"reference internal" h=
ref=3D"http://localhost:63342/AABB/Documentation/_build/html/_modules/packa=
ge_aab/src/SuffixTree.html#SuffixTree"><span class=3D"viewcode-link"><span =
class=3D"pre">[source]</span></span></a><a class=3D"headerlink" href=3D"htt=
p://localhost:63342/AABB/Documentation/_build/html/package_aab.src.html#pac=
kage_aab.src.SuffixTree.SuffixTree" title=3D"Permalink to this definition">=
=C2=B6</a></dt>
<dd><p>Bases: <code class=3D"xref py py-class docutils literal notranslate"=
><span class=3D"pre">object</span></code></p>
<p>Class that creates a suffix tree of a pattern that will be searched in a=
 sequence.
It allows pre-processing a target sequence, making its search more efficien=
t.
It is the solution to pre-process very large sequences, discovering which t=
rees contain a given pattern,
finding out the longest common substring in a set of sequences and calculat=
ing the maximum overlap of a set of
sequences.</p>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.SuffixTree.SuffixTree=
.addNode">
<span class=3D"sig-name descname"><span class=3D"pre">addNode</span></span>=
<span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n"=
><span class=3D"pre">origin</span></span><span class=3D"p"><span class=3D"p=
re">:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=
=3D"pre">int</span></span></em>, <em class=3D"sig-param"><span class=3D"n">=
<span class=3D"pre">symbol</span></span><span class=3D"p"><span class=3D"pr=
e">:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=
=3D"pre">str</span></span></em>, <em class=3D"sig-param"><span class=3D"n">=
<span class=3D"pre">leafnum</span></span><span class=3D"o"><span class=3D"p=
re">=3D</span></span><span class=3D"default_value"><span class=3D"pre">-</s=
pan> <span class=3D"pre">1</span></span></em><span class=3D"sig-paren">)</s=
pan> <span class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</=
span> <span class=3D"sig-return-typehint"><span class=3D"pre">None</span></=
span></span><a class=3D"reference internal" href=3D"http://localhost:63342/=
AABB/Documentation/_build/html/_modules/package_aab/src/SuffixTree.html#Suf=
fixTree.addNode"><span class=3D"viewcode-link"><span class=3D"pre">[source]=
</span></span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AA=
BB/Documentation/_build/html/package_aab.src.html#package_aab.src.SuffixTre=
e.SuffixTree.addNode" title=3D"Permalink to this definition">=C2=B6</a></dt=
>
<dd><p>Method that adds nodes to the tree.
:param origin: current node
:param symbol: character to be added to the node
:param leafnum: leaf number (-1 is default)</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.SuffixTree.SuffixTree=
.addSuffix">
<span class=3D"sig-name descname"><span class=3D"pre">addSuffix</span></spa=
n><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"=
n"><span class=3D"pre">p</span></span><span class=3D"p"><span class=3D"pre"=
>:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=3D"=
pre">list</span></span></em>, <em class=3D"sig-param"><span class=3D"n"><sp=
an class=3D"pre">sufnum</span></span><span class=3D"p"><span class=3D"pre">=
:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=3D"p=
re">int</span></span></em><span class=3D"sig-paren">)</span> <span class=3D=
"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span class=
=3D"sig-return-typehint"><span class=3D"pre">None</span></span></span><a cl=
ass=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentatio=
n/_build/html/_modules/package_aab/src/SuffixTree.html#SuffixTree.addSuffix=
"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span><=
/a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentatio=
n/_build/html/package_aab.src.html#package_aab.src.SuffixTree.SuffixTree.ad=
dSuffix" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that adds suffix to the tree.
:param p: pattern
:param sufnum: suffix number for leaves or -1 for non-leaves</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.SuffixTree.SuffixTree=
.findPattern">
<span class=3D"sig-name descname"><span class=3D"pre">findPattern</span></s=
pan><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=
=3D"n"><span class=3D"pre">pattern</span></span><span class=3D"p"><span cla=
ss=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><span=
 class=3D"pre">str</span></span></em><span class=3D"sig-paren">)</span><a c=
lass=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentati=
on/_build/html/_modules/package_aab/src/SuffixTree.html#SuffixTree.findPatt=
ern"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></spa=
n></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documenta=
tion/_build/html/package_aab.src.html#package_aab.src.SuffixTree.SuffixTree=
.findPattern" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that searches for patterns (trie) starting from the root unti=
l reaching the final node or failing the search.
:param pattern: pattern to search for
:return: list of leaves below a given node or None (if search fails)</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.SuffixTree.SuffixTree=
.getLeavesBelow">
<span class=3D"sig-name descname"><span class=3D"pre">getLeavesBelow</span>=
</span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span clas=
s=3D"n"><span class=3D"pre">node</span></span><span class=3D"p"><span class=
=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><span c=
lass=3D"pre">int</span></span></em><span class=3D"sig-paren">)</span> <span=
 class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <spa=
n class=3D"sig-return-typehint"><span class=3D"pre">list</span></span></spa=
n><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docum=
entation/_build/html/_modules/package_aab/src/SuffixTree.html#SuffixTree.ge=
tLeavesBelow"><span class=3D"viewcode-link"><span class=3D"pre">[source]</s=
pan></span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/=
Documentation/_build/html/package_aab.src.html#package_aab.src.SuffixTree.S=
uffixTree.getLeavesBelow" title=3D"Permalink to this definition">=C2=B6</a>=
</dt>
<dd><p>Auxiliary method for collecting all leaves below a given node.
:param node: node from which to search for leaf information below it
:return: list of leaves below a given node</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.SuffixTree.SuffixTree=
.printTree">
<span class=3D"sig-name descname"><span class=3D"pre">printTree</span></spa=
n><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span> <spa=
n class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <sp=
an class=3D"sig-return-typehint"><span class=3D"pre">None</span></span></sp=
an><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docu=
mentation/_build/html/_modules/package_aab/src/SuffixTree.html#SuffixTree.p=
rintTree"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span>=
</span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Docu=
mentation/_build/html/package_aab.src.html#package_aab.src.SuffixTree.Suffi=
xTree.printTree" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that prints the suffix tree.</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.SuffixTree.SuffixTree=
.suffixTreeFromSeq">
<span class=3D"sig-name descname"><span class=3D"pre">suffixTreeFromSeq</sp=
an></span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span c=
lass=3D"n"><span class=3D"pre">text</span></span><span class=3D"p"><span cl=
ass=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><spa=
n class=3D"pre">str</span></span></em><span class=3D"sig-paren">)</span> <s=
pan class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <=
span class=3D"sig-return-typehint"><span class=3D"pre">None</span></span></=
span><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Do=
cumentation/_build/html/_modules/package_aab/src/SuffixTree.html#SuffixTree=
.suffixTreeFromSeq"><span class=3D"viewcode-link"><span class=3D"pre">[sour=
ce]</span></span></a><a class=3D"headerlink" href=3D"http://localhost:63342=
/AABB/Documentation/_build/html/package_aab.src.html#package_aab.src.Suffix=
Tree.SuffixTree.suffixTreeFromSeq" title=3D"Permalink to this definition">=
=C2=B6</a></dt>
<dd><p>Method that creates the suffix tree, adding a symbol (=E2=80=9C$=E2=
=80=9D) at the end of the sequence and calling the previous method
for each suffix of the sequence -&gt; no suffix will be the prefix of anoth=
er suffix.
:param text: sequence that will be added to the tree</p>
</dd></dl>

</dd></dl>

</section>
<section id=3D"module-package_aab.src.Trie">
<span id=3D"package-aab-src-trie-module"></span><h2>package_aab.src.Trie mo=
dule<a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentati=
on/_build/html/package_aab.src.html#module-package_aab.src.Trie" title=3D"P=
ermalink to this heading">=C2=B6</a></h2>
<p>Class: Trie - Trie of prefixes</p>
<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Trie.Trie">
<em class=3D"property"><span class=3D"pre">class</span><span class=3D"w"> <=
/span></em><span class=3D"sig-prename descclassname"><span class=3D"pre">pa=
ckage_aab.src.Trie.</span></span><span class=3D"sig-name descname"><span cl=
ass=3D"pre">Trie</span></span><a class=3D"reference internal" href=3D"http:=
//localhost:63342/AABB/Documentation/_build/html/_modules/package_aab/src/T=
rie.html#Trie"><span class=3D"viewcode-link"><span class=3D"pre">[source]</=
span></span></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB=
/Documentation/_build/html/package_aab.src.html#package_aab.src.Trie.Trie" =
title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Bases: <code class=3D"xref py py-class docutils literal notranslate"=
><span class=3D"pre">object</span></code></p>
<p>Class responsible for implementing the prefix tree that allows pre-proce=
ssing
of a set of patterns. The symbols of a given alphabet are associated with t=
he arcs of a tree.
The trie is built from a set of patterns, starting from the root node and i=
terating
each pattern, adding the necessary nodes so that the tree contains the path=
 from the root to the leaf,
representing the pattern.</p>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Trie.Trie.addNode">
<span class=3D"sig-name descname"><span class=3D"pre">addNode</span></span>=
<span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n"=
><span class=3D"pre">origin</span></span><span class=3D"p"><span class=3D"p=
re">:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=
=3D"pre">int</span></span></em>, <em class=3D"sig-param"><span class=3D"n">=
<span class=3D"pre">symbol</span></span><span class=3D"p"><span class=3D"pr=
e">:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=
=3D"pre">str</span></span></em><span class=3D"sig-paren">)</span> <span cla=
ss=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span cl=
ass=3D"sig-return-typehint"><span class=3D"pre">None</span></span></span><a=
 class=3D"reference internal" href=3D"http://localhost:63342/AABB/Documenta=
tion/_build/html/_modules/package_aab/src/Trie.html#Trie.addNode"><span cla=
ss=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a class=
=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_build/ht=
ml/package_aab.src.html#package_aab.src.Trie.Trie.addNode" title=3D"Permali=
nk to this definition">=C2=B6</a></dt>
<dd><p>Method that adds a node to the trie.
This method is used by the add_pattern method.
:param origin: existing node
:param symbol: character referring to the node to be added (arc identificat=
ion)</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Trie.Trie.addPattern"=
>
<span class=3D"sig-name descname"><span class=3D"pre">addPattern</span></sp=
an><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D=
"n"><span class=3D"pre">p</span></span><span class=3D"p"><span class=3D"pre=
">:</span></span><span class=3D"w"> </span><span class=3D"n"><span class=3D=
"pre">list</span></span></em><span class=3D"sig-paren">)</span> <span class=
=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <span clas=
s=3D"sig-return-typehint"><span class=3D"pre">None</span></span></span><a c=
lass=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentati=
on/_build/html/_modules/package_aab/src/Trie.html#Trie.addPattern"><span cl=
ass=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a clas=
s=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_build/h=
tml/package_aab.src.html#package_aab.src.Trie.Trie.addPattern" title=3D"Per=
malink to this definition">=C2=B6</a></dt>
<dd><p>Method that adds a pattern to the trie
:param p: input pattern</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Trie.Trie.prefixTrieM=
atch">
<span class=3D"sig-name descname"><span class=3D"pre">prefixTrieMatch</span=
></span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span cla=
ss=3D"n"><span class=3D"pre">text</span></span><span class=3D"p"><span clas=
s=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><span =
class=3D"pre">str</span></span></em><span class=3D"sig-paren">)</span><a cl=
ass=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentatio=
n/_build/html/_modules/package_aab/src/Trie.html#Trie.prefixTrieMatch"><spa=
n class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a =
class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_bui=
ld/html/package_aab.src.html#package_aab.src.Trie.Trie.prefixTrieMatch" tit=
le=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method to search if a trie pattern is a sequence prefix.
Scrolls through the sequence of characters and the tree, starting at the ro=
ot, following the
arcs corresponding to the characters of the sequence until one of the follo=
wing occurs:
- If it reaches a leaf of the trie, the pattern has been identified;
- The character of the sequence does not exist -&gt; no pattern was identif=
ied in the trie.
:param text: sequence of characters
:return: prefix match or None</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Trie.Trie.printTrie">
<span class=3D"sig-name descname"><span class=3D"pre">printTrie</span></spa=
n><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><a cl=
ass=3D"reference internal" href=3D"http://localhost:63342/AABB/Documentatio=
n/_build/html/_modules/package_aab/src/Trie.html#Trie.printTrie"><span clas=
s=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a class=
=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_build/ht=
ml/package_aab.src.html#package_aab.src.Trie.Trie.printTrie" title=3D"Perma=
link to this definition">=C2=B6</a></dt>
<dd><p>Method that print the trie</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Trie.Trie.trieFromPat=
terns">
<span class=3D"sig-name descname"><span class=3D"pre">trieFromPatterns</spa=
n></span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span cl=
ass=3D"n"><span class=3D"pre">pats</span></span><span class=3D"p"><span cla=
ss=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><span=
 class=3D"pre">list</span></span></em><span class=3D"sig-paren">)</span> <s=
pan class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <=
span class=3D"sig-return-typehint"><span class=3D"pre">None</span></span></=
span><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Do=
cumentation/_build/html/_modules/package_aab/src/Trie.html#Trie.trieFromPat=
terns"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></s=
pan></a><a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documen=
tation/_build/html/package_aab.src.html#package_aab.src.Trie.Trie.trieFromP=
atterns" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method that adds each pattern of the input to the trie.
:param pats: input patterns</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"package_aab.src.Trie.Trie.trieMatches=
">
<span class=3D"sig-name descname"><span class=3D"pre">trieMatches</span></s=
pan><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=
=3D"n"><span class=3D"pre">text</span></span><span class=3D"p"><span class=
=3D"pre">:</span></span><span class=3D"w"> </span><span class=3D"n"><span c=
lass=3D"pre">str</span></span></em><span class=3D"sig-paren">)</span> <span=
 class=3D"sig-return"><span class=3D"sig-return-icon">=E2=86=92</span> <spa=
n class=3D"sig-return-typehint"><span class=3D"pre">list</span></span></spa=
n><a class=3D"reference internal" href=3D"http://localhost:63342/AABB/Docum=
entation/_build/html/_modules/package_aab/src/Trie.html#Trie.trieMatches"><=
span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a>=
<a class=3D"headerlink" href=3D"http://localhost:63342/AABB/Documentation/_=
build/html/package_aab.src.html#package_aab.src.Trie.Trie.trieMatches" titl=
e=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Method to, using the prefixTrieMatch method, look for occurrences (m=
atches) of the pattern in the sequence.
Iterative process - matches the sequence, removes the first symbol from the=
 sequence, repeats the process
is repeated for all suffixes in the sequence.
:param text: sequence
:return: list of matches</p>
</dd></dl>

</dd></dl>

</section>
<section id=3D"module-package_aab.src">
<span id=3D"module-contents"></span><h2>Module contents<a class=3D"headerli=
nk" href=3D"http://localhost:63342/AABB/Documentation/_build/html/package_a=
ab.src.html#module-package_aab.src" title=3D"Permalink to this heading">=C2=
=B6</a></h2>
</section>
</section>


          </div>
         =20
        </div>
      </div>
      <div class=3D"sphinxsidebar" role=3D"navigation" aria-label=3D"main n=
avigation">
        <div class=3D"sphinxsidebarwrapper">
<h1 class=3D"logo"><a href=3D"http://localhost:63342/AABB/Documentation/_bu=
ild/html/index.html">AABB</a></h1>








<h3>Navigation</h3>
<p class=3D"caption" role=3D"heading"><span class=3D"caption-text">Contents=
:</span></p>
<ul class=3D"current">
<li class=3D"toctree-l1 current"><a class=3D"reference internal" href=3D"ht=
tp://localhost:63342/AABB/Documentation/_build/html/modules.html">AABB</a><=
ul class=3D"current">
<li class=3D"toctree-l2 current"><a class=3D"current reference internal" hr=
ef=3D"http://localhost:63342/AABB/Documentation/_build/html/package_aab.src=
.html#">package_aab.src package</a></li>
</ul>
</li>
</ul>

<div class=3D"relations">
<h3>Related Topics</h3>
<ul>
  <li><a href=3D"http://localhost:63342/AABB/Documentation/_build/html/inde=
x.html">Documentation overview</a><ul>
  <li><a href=3D"http://localhost:63342/AABB/Documentation/_build/html/modu=
les.html">AABB</a><ul>
      <li>Previous: <a href=3D"http://localhost:63342/AABB/Documentation/_b=
uild/html/modules.html" title=3D"previous chapter">AABB</a></li>
  </ul></li>
  </ul></li>
</ul>
</div>
<div id=3D"searchbox" style=3D"display: block;" role=3D"search">
  <h3 id=3D"searchlabel">Quick search</h3>
    <div class=3D"searchformwrapper">
    <form class=3D"search" action=3D"http://localhost:63342/AABB/Documentat=
ion/_build/html/search.html" method=3D"get">
      <input type=3D"text" name=3D"q" aria-labelledby=3D"searchlabel" autoc=
omplete=3D"off" autocorrect=3D"off" autocapitalize=3D"off" spellcheck=3D"fa=
lse">
      <input type=3D"submit" value=3D"Go">
    </form>
    </div>
</div>









        </div>
      </div>
      <div class=3D"clearer"></div>
    </div>
    <div class=3D"footer">
      =C2=A92023, Beatriz Silva.
     =20
      |
      Powered by <a href=3D"http://sphinx-doc.org/">Sphinx 5.0.2</a>
      &amp; <a href=3D"https://github.com/bitprophet/alabaster">Alabaster 0=
.7.12</a>
     =20
      |
      <a href=3D"http://localhost:63342/AABB/Documentation/_build/html/_sou=
rces/package_aab.src.rst.txt" rel=3D"nofollow">Page source</a>
    </div>

   =20

   =20
 =20
</body></html>
------MultipartBoundary--XZw9mQtmtvfj0x3yyfPyS88edy4BYzOlNDpGi9eWkg----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/Users/USUARIO/Desktop/package_aab.src%20package%20%E2%80%94%20AABB%20documentation_files/pygments.css

@charset "utf-8";

pre { line-height: 125%; }

td.linenos .normal { color: inherit; background-color: transparent; padding=
-left: 5px; padding-right: 5px; }

span.linenos { color: inherit; background-color: transparent; padding-left:=
 5px; padding-right: 5px; }

td.linenos .special { color: rgb(0, 0, 0); background-color: rgb(255, 255, =
192); padding-left: 5px; padding-right: 5px; }

span.linenos.special { color: rgb(0, 0, 0); background-color: rgb(255, 255,=
 192); padding-left: 5px; padding-right: 5px; }

.highlight .hll { background-color: rgb(255, 255, 204); }

.highlight { background: rgb(248, 248, 248); }

.highlight .c { color: rgb(143, 89, 2); font-style: italic; }

.highlight .err { color: rgb(164, 0, 0); border: 1px solid rgb(239, 41, 41)=
; }

.highlight .g { color: rgb(0, 0, 0); }

.highlight .k { color: rgb(0, 68, 97); font-weight: bold; }

.highlight .l { color: rgb(0, 0, 0); }

.highlight .n { color: rgb(0, 0, 0); }

.highlight .o { color: rgb(88, 40, 0); }

.highlight .x { color: rgb(0, 0, 0); }

.highlight .p { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .ch { color: rgb(143, 89, 2); font-style: italic; }

.highlight .cm { color: rgb(143, 89, 2); font-style: italic; }

.highlight .cp { color: rgb(143, 89, 2); }

.highlight .cpf { color: rgb(143, 89, 2); font-style: italic; }

.highlight .c1 { color: rgb(143, 89, 2); font-style: italic; }

.highlight .cs { color: rgb(143, 89, 2); font-style: italic; }

.highlight .gd { color: rgb(164, 0, 0); }

.highlight .ge { color: rgb(0, 0, 0); font-style: italic; }

.highlight .gr { color: rgb(239, 41, 41); }

.highlight .gh { color: rgb(0, 0, 128); font-weight: bold; }

.highlight .gi { color: rgb(0, 160, 0); }

.highlight .go { color: rgb(136, 136, 136); }

.highlight .gp { color: rgb(116, 83, 52); }

.highlight .gs { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .gu { color: rgb(128, 0, 128); font-weight: bold; }

.highlight .gt { color: rgb(164, 0, 0); font-weight: bold; }

.highlight .kc { color: rgb(0, 68, 97); font-weight: bold; }

.highlight .kd { color: rgb(0, 68, 97); font-weight: bold; }

.highlight .kn { color: rgb(0, 68, 97); font-weight: bold; }

.highlight .kp { color: rgb(0, 68, 97); font-weight: bold; }

.highlight .kr { color: rgb(0, 68, 97); font-weight: bold; }

.highlight .kt { color: rgb(0, 68, 97); font-weight: bold; }

.highlight .ld { color: rgb(0, 0, 0); }

.highlight .m { color: rgb(153, 0, 0); }

.highlight .s { color: rgb(78, 154, 6); }

.highlight .na { color: rgb(196, 160, 0); }

.highlight .nb { color: rgb(0, 68, 97); }

.highlight .nc { color: rgb(0, 0, 0); }

.highlight .no { color: rgb(0, 0, 0); }

.highlight .nd { color: rgb(136, 136, 136); }

.highlight .ni { color: rgb(206, 92, 0); }

.highlight .ne { color: rgb(204, 0, 0); font-weight: bold; }

.highlight .nf { color: rgb(0, 0, 0); }

.highlight .nl { color: rgb(245, 121, 0); }

.highlight .nn { color: rgb(0, 0, 0); }

.highlight .nx { color: rgb(0, 0, 0); }

.highlight .py { color: rgb(0, 0, 0); }

.highlight .nt { color: rgb(0, 68, 97); font-weight: bold; }

.highlight .nv { color: rgb(0, 0, 0); }

.highlight .ow { color: rgb(0, 68, 97); font-weight: bold; }

.highlight .w { color: rgb(248, 248, 248); text-decoration: underline; }

.highlight .mb { color: rgb(153, 0, 0); }

.highlight .mf { color: rgb(153, 0, 0); }

.highlight .mh { color: rgb(153, 0, 0); }

.highlight .mi { color: rgb(153, 0, 0); }

.highlight .mo { color: rgb(153, 0, 0); }

.highlight .sa { color: rgb(78, 154, 6); }

.highlight .sb { color: rgb(78, 154, 6); }

.highlight .sc { color: rgb(78, 154, 6); }

.highlight .dl { color: rgb(78, 154, 6); }

.highlight .sd { color: rgb(143, 89, 2); font-style: italic; }

.highlight .s2 { color: rgb(78, 154, 6); }

.highlight .se { color: rgb(78, 154, 6); }

.highlight .sh { color: rgb(78, 154, 6); }

.highlight .si { color: rgb(78, 154, 6); }

.highlight .sx { color: rgb(78, 154, 6); }

.highlight .sr { color: rgb(78, 154, 6); }

.highlight .s1 { color: rgb(78, 154, 6); }

.highlight .ss { color: rgb(78, 154, 6); }

.highlight .bp { color: rgb(52, 101, 164); }

.highlight .fm { color: rgb(0, 0, 0); }

.highlight .vc { color: rgb(0, 0, 0); }

.highlight .vg { color: rgb(0, 0, 0); }

.highlight .vi { color: rgb(0, 0, 0); }

.highlight .vm { color: rgb(0, 0, 0); }

.highlight .il { color: rgb(153, 0, 0); }
------MultipartBoundary--XZw9mQtmtvfj0x3yyfPyS88edy4BYzOlNDpGi9eWkg----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/Users/USUARIO/Desktop/package_aab.src%20package%20%E2%80%94%20AABB%20documentation_files/alabaster.css

@charset "utf-8";

@import url("basic.css");

body { font-family: Georgia, serif; font-size: 17px; background-color: rgb(=
255, 255, 255); color: rgb(0, 0, 0); margin: 0px; padding: 0px; }

div.document { width: 940px; margin: 30px auto 0px; }

div.documentwrapper { float: left; width: 100%; }

div.bodywrapper { margin: 0px 0px 0px 220px; }

div.sphinxsidebar { width: 220px; font-size: 14px; line-height: 1.5; }

hr { border: 1px solid rgb(177, 180, 182); }

div.body { background-color: rgb(255, 255, 255); color: rgb(62, 67, 73); pa=
dding: 0px 30px; }

div.body > .section { text-align: left; }

div.footer { width: 940px; margin: 20px auto 30px; font-size: 14px; color: =
rgb(136, 136, 136); text-align: right; }

div.footer a { color: rgb(136, 136, 136); }

p.caption { font-family: inherit; font-size: inherit; }

div.relations { display: none; }

div.sphinxsidebar a { color: rgb(68, 68, 68); text-decoration: none; border=
-bottom: 1px dotted rgb(153, 153, 153); }

div.sphinxsidebar a:hover { border-bottom: 1px solid rgb(153, 153, 153); }

div.sphinxsidebarwrapper { padding: 18px 10px; }

div.sphinxsidebarwrapper p.logo { padding: 0px; margin: -10px 0px 0px; text=
-align: center; }

div.sphinxsidebarwrapper h1.logo { margin-top: -10px; margin-bottom: 5px; t=
ext-align: left; }

div.sphinxsidebarwrapper h1.logo-name { margin-top: 0px; }

div.sphinxsidebarwrapper p.blurb { margin-top: 0px; font-style: normal; }

div.sphinxsidebar h3, div.sphinxsidebar h4 { font-family: Georgia, serif; c=
olor: rgb(68, 68, 68); font-size: 24px; font-weight: normal; margin: 0px 0p=
x 5px; padding: 0px; }

div.sphinxsidebar h4 { font-size: 20px; }

div.sphinxsidebar h3 a { color: rgb(68, 68, 68); }

div.sphinxsidebar p.logo a, div.sphinxsidebar h3 a, div.sphinxsidebar p.log=
o a:hover, div.sphinxsidebar h3 a:hover { border: none; }

div.sphinxsidebar p { color: rgb(85, 85, 85); margin: 10px 0px; }

div.sphinxsidebar ul { margin: 10px 0px; padding: 0px; color: rgb(0, 0, 0);=
 }

div.sphinxsidebar ul li.toctree-l1 > a { font-size: 120%; }

div.sphinxsidebar ul li.toctree-l2 > a { font-size: 110%; }

div.sphinxsidebar input { border: 1px solid rgb(204, 204, 204); font-family=
: Georgia, serif; font-size: 1em; }

div.sphinxsidebar hr { border: none; height: 1px; color: rgb(170, 170, 170)=
; background: rgb(170, 170, 170); text-align: left; margin-left: 0px; width=
: 50%; }

div.sphinxsidebar .badge { border-bottom: none; }

div.sphinxsidebar .badge:hover { border-bottom: none; }

div.sphinxsidebar h3.donation { margin-top: 10px; }

a { color: rgb(0, 75, 107); text-decoration: underline; }

a:hover { color: rgb(109, 65, 0); text-decoration: underline; }

div.body h1, div.body h2, div.body h3, div.body h4, div.body h5, div.body h=
6 { font-family: Georgia, serif; font-weight: normal; margin: 30px 0px 10px=
; padding: 0px; }

div.body h1 { margin-top: 0px; padding-top: 0px; font-size: 240%; }

div.body h2 { font-size: 180%; }

div.body h3 { font-size: 150%; }

div.body h4 { font-size: 130%; }

div.body h5 { font-size: 100%; }

div.body h6 { font-size: 100%; }

a.headerlink { color: rgb(221, 221, 221); padding: 0px 4px; text-decoration=
: none; }

a.headerlink:hover { color: rgb(68, 68, 68); background: rgb(234, 234, 234)=
; }

div.body p, div.body dd, div.body li { line-height: 1.4em; }

div.admonition { margin: 20px 0px; padding: 10px 30px; background-color: rg=
b(238, 238, 238); border: 1px solid rgb(204, 204, 204); }

div.admonition tt.xref, div.admonition code.xref, div.admonition a tt { bac=
kground-color: rgb(251, 251, 251); border-bottom: 1px solid rgb(250, 250, 2=
50); }

div.admonition p.admonition-title { font-family: Georgia, serif; font-weigh=
t: normal; font-size: 24px; margin: 0px 0px 10px; padding: 0px; line-height=
: 1; }

div.admonition p.last { margin-bottom: 0px; }

div.highlight { background-color: rgb(255, 255, 255); }

dt:target, .highlight { background: rgb(250, 243, 232); }

div.warning { background-color: rgb(255, 204, 204); border: 1px solid rgb(2=
55, 170, 170); }

div.danger { background-color: rgb(255, 204, 204); border: 1px solid rgb(25=
5, 170, 170); box-shadow: rgb(213, 44, 44) 2px 2px 4px; }

div.error { background-color: rgb(255, 204, 204); border: 1px solid rgb(255=
, 170, 170); box-shadow: rgb(213, 44, 44) 2px 2px 4px; }

div.caution { background-color: rgb(255, 204, 204); border: 1px solid rgb(2=
55, 170, 170); }

div.attention { background-color: rgb(255, 204, 204); border: 1px solid rgb=
(255, 170, 170); }

div.important { background-color: rgb(238, 238, 238); border: 1px solid rgb=
(204, 204, 204); }

div.note { background-color: rgb(238, 238, 238); border: 1px solid rgb(204,=
 204, 204); }

div.tip { background-color: rgb(238, 238, 238); border: 1px solid rgb(204, =
204, 204); }

div.hint { background-color: rgb(238, 238, 238); border: 1px solid rgb(204,=
 204, 204); }

div.seealso { background-color: rgb(238, 238, 238); border: 1px solid rgb(2=
04, 204, 204); }

div.topic { background-color: rgb(238, 238, 238); }

p.admonition-title { display: inline; }

p.admonition-title::after { content: ":"; }

pre, tt, code { font-family: Consolas, Menlo, "DejaVu Sans Mono", "Bitstrea=
m Vera Sans Mono", monospace; font-size: 0.9em; }

.hll { background-color: rgb(255, 255, 204); margin: 0px -12px; padding: 0p=
x 12px; display: block; }

img.screenshot { }

tt.descname, tt.descclassname, code.descname, code.descclassname { font-siz=
e: 0.95em; }

tt.descname, code.descname { padding-right: 0.08em; }

img.screenshot { box-shadow: rgb(238, 238, 238) 2px 2px 4px; }

table.docutils { border: 1px solid rgb(136, 136, 136); box-shadow: rgb(238,=
 238, 238) 2px 2px 4px; }

table.docutils td, table.docutils th { border: 1px solid rgb(136, 136, 136)=
; padding: 0.25em 0.7em; }

table.field-list, table.footnote { border: none; box-shadow: none; }

table.footnote { margin: 15px 0px; width: 100%; border: 1px solid rgb(238, =
238, 238); background: rgb(253, 253, 253); font-size: 0.9em; }

table.footnote + table.footnote { margin-top: -15px; border-top: none; }

table.field-list th { padding: 0px 0.8em 0px 0px; }

table.field-list td { padding: 0px; }

table.field-list p { margin-bottom: 0.8em; }

.field-name { hyphens: manual; }

table.footnote td.label { width: 0.1px; padding: 0.3em 0px 0.3em 0.5em; }

table.footnote td { padding: 0.3em 0.5em; }

dl { margin: 0px; padding: 0px; }

dl dd { margin-left: 30px; }

blockquote { margin: 0px 0px 0px 30px; padding: 0px; }

ul, ol { margin: 10px 0px 10px 30px; padding: 0px; }

pre { background: rgb(238, 238, 238); padding: 7px 30px; margin: 15px 0px; =
line-height: 1.3em; }

div.viewcode-block:target { background: rgb(255, 255, 221); }

dl pre, blockquote pre, li pre { margin-left: 0px; padding-left: 30px; }

tt, code { background-color: rgb(236, 240, 243); color: rgb(34, 34, 34); }

tt.xref, code.xref, a tt { background-color: rgb(251, 251, 251); border-bot=
tom: 1px solid rgb(255, 255, 255); }

a.reference { text-decoration: none; border-bottom: 1px dotted rgb(0, 75, 1=
07); }

a.image-reference, a.image-reference:hover { border-bottom: none; }

a.reference:hover { border-bottom: 1px solid rgb(109, 65, 0); }

a.footnote-reference { text-decoration: none; font-size: 0.7em; vertical-al=
ign: top; border-bottom: 1px dotted rgb(0, 75, 107); }

a.footnote-reference:hover { border-bottom: 1px solid rgb(109, 65, 0); }

a:hover tt, a:hover code { background: rgb(238, 238, 238); }

@media screen and (max-width: 870px) {
  div.sphinxsidebar { display: none; }
  div.document { width: 100%; }
  div.documentwrapper { margin: 0px; }
  div.bodywrapper { margin: 0px; }
  ul { margin-left: 0px; }
  li > ul { margin-left: 30px; }
  .document { width: auto; }
  .footer { width: auto; }
  .bodywrapper { margin: 0px; }
  .footer { width: auto; }
  .github { display: none; }
}

@media screen and (max-width: 875px) {
  body { margin: 0px; padding: 20px 30px; }
  div.documentwrapper { float: none; background: rgb(255, 255, 255); }
  div.sphinxsidebar { display: block; float: none; width: 102.5%; margin: 5=
0px -30px -20px; padding: 10px 20px; background: rgb(51, 51, 51); color: rg=
b(255, 255, 255); }
  div.sphinxsidebar h3, div.sphinxsidebar h4, div.sphinxsidebar p, div.sphi=
nxsidebar h3 a { color: rgb(255, 255, 255); }
  div.sphinxsidebar a { color: rgb(170, 170, 170); }
  div.sphinxsidebar p.logo { display: none; }
  div.document { width: 100%; margin: 0px; }
  div.footer { display: none; }
  div.bodywrapper { margin: 0px; }
  div.body { min-height: 0px; padding: 0px; }
  .rtd_doc_footer { display: none; }
  .document { width: auto; }
  .footer { width: auto; }
  .footer { width: auto; }
  .github { display: none; }
}

.revsys-inline { display: none !important; }

div#changelog > div.section > ul > li > p:only-child { margin-bottom: 0px; =
}

table.docutils.citation, table.docutils.citation td, table.docutils.citatio=
n th { border: none; box-shadow: none; }

.related { line-height: 30px; width: 100%; font-size: 0.9rem; }

.related.top { border-bottom: 1px solid rgb(238, 238, 238); margin-bottom: =
20px; }

.related.bottom { border-top: 1px solid rgb(238, 238, 238); }

.related ul { padding: 0px; margin: 0px; list-style: none; }

.related li { display: inline; }

nav#rellinks { float: right; }

nav#rellinks li + li::before { content: "|"; }

nav#breadcrumbs li + li::before { content: "=C2=BB"; }

@media print {
  div.related { display: none; }
}
------MultipartBoundary--XZw9mQtmtvfj0x3yyfPyS88edy4BYzOlNDpGi9eWkg----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/Users/USUARIO/Desktop/package_aab.src%20package%20%E2%80%94%20AABB%20documentation_files/basic.css

@charset "utf-8";
=0A
------MultipartBoundary--XZw9mQtmtvfj0x3yyfPyS88edy4BYzOlNDpGi9eWkg----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/Users/USUARIO/Desktop/package_aab.src%20package%20%E2%80%94%20AABB%20documentation_files/custom.css

@charset "utf-8";
=0A
------MultipartBoundary--XZw9mQtmtvfj0x3yyfPyS88edy4BYzOlNDpGi9eWkg------
